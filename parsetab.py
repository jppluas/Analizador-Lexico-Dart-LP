
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ASSIGN BLOCKCOMMENT BOOLEAN_TYPE BREAK CASE CATCH COLON COMMA COMMENT CONST CONTINUE DEFAULT DIVIDE DO DOT DOUBLE DOUBLE_TYPE DYNAMIC_TYPE ELSE ENUM ENUM_TYPE EQUAL EXTENDS FALSE FINAL FINALLY FOR GET GREATER GREATER_EQUAL IDENTIFIER IF IMPLEMENTS IN INLINE_ARITH INTEGER INTEGER_TYPE LBRACE LESS LESS_EQUAL LINE_BREAK LIST_TYPE LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSQUARE MAP_TYPE MINUS NOT_EQUAL NULL PLUS PRINT QUESTION_MARK QUEUE_TYPE RBRACE RETURN RPAREN RSQUARE SEMICOLON SET_TYPE STRING STRING_TYPE SWITCH THROW TIMES TRUE TRY TYPEDEF VAR VOID WHILE ZERO\n    statement : expression\n              | assignment\n              | print\n              | function\n              | if_statement\n              | while_statement\n              | for_statement\n              | lines\n              | LBRACE lines RBRACE\n              | reassignment\n              | \n      assignment : modifier type nullable IDENTIFIER ASSIGN expression SEMICOLON\n                    | type nullable IDENTIFIER ASSIGN expression SEMICOLON\n                    | modifier type IDENTIFIER ASSIGN expression SEMICOLON\n                    | type IDENTIFIER ASSIGN expression SEMICOLON\n                    | type IDENTIFIER ASSIGN expression\n                    | string_assignment\n                    | list_assigment\n                    | map_assignment\n      int_assignment :  number_type IDENTIFIER ASSIGN arithmetic SEMICOLON\n                    | number_type IDENTIFIER ASSIGN arithmetic\n                    | modifier number_type nullable IDENTIFIER ASSIGN NULL SEMICOLON\n                    | number_type nullable IDENTIFIER ASSIGN NULL SEMICOLON\n                    | modifier number_type nullable IDENTIFIER ASSIGN arithmetic SEMICOLON\n                    | number_type nullable IDENTIFIER ASSIGN arithmetic SEMICOLON\n                    | modifier number_type IDENTIFIER ASSIGN arithmetic SEMICOLON\n                    \n      string_assignment : type_string IDENTIFIER ASSIGN concate SEMICOLON\n                    | type_string IDENTIFIER ASSIGN concate\n                    | modifier type_string nullable IDENTIFIER ASSIGN NULL SEMICOLON\n                    | type_string nullable IDENTIFIER ASSIGN NULL SEMICOLON\n                    | modifier type_string nullable IDENTIFIER ASSIGN concate SEMICOLON\n                    | type_string nullable IDENTIFIER ASSIGN concate SEMICOLON\n                    | modifier type_string IDENTIFIER ASSIGN concate SEMICOLON\n                  \n     number_type : INTEGER_TYPE\n                        | DOUBLE_TYPE\n                        | VAR\n     type_string : STRING_TYPE\n                    | VAR\n    \n        reassignment : IDENTIFIER ASSIGN expression SEMICOLON\n                     | IDENTIFIER INLINE_ARITH number SEMICOLON\n                     | IDENTIFIER INLINE_ARITH SEMICOLON\n                     | IDENTIFIER INLINE_ARITH number\n                     | IDENTIFIER INLINE_ARITH\n     nullable : QUESTION_MARK\n     modifier : FINAL\n                | CONST\n      print : PRINT LPAREN expression RPAREN SEMICOLON\n                | PRINT LPAREN RPAREN SEMICOLON\n    \n    if_statement : IF LPAREN logic RPAREN LBRACE lines RBRACE\n                 | if_statement ELSE if_statement\n                 | if_statement ELSE LBRACE lines RBRACE\n    \n    function_call : IDENTIFIER LPAREN values RPAREN SEMICOLON\n                    | IDENTIFIER LPAREN values RPAREN\n                    | IDENTIFIER LPAREN RPAREN SEMICOLON\n                    | IDENTIFIER LPAREN RPAREN\n     type : INTEGER_TYPE\n            | DOUBLE_TYPE\n            | BOOLEAN_TYPE\n            | QUEUE_TYPE\n            | STRING_TYPE\n            | ENUM_TYPE\n            | VAR\n            | LIST_TYPE\n            | MAP_TYPE\n            | SET_TYPE\n            | DYNAMIC_TYPE\n            | VOID\n\n      expression : arithmetic\n                    | concate\n                    | logic\n                    | function_call\n                    | division\n     arithmetic : number\n        |   arithmetic arith_op arithmetic\n        |   LPAREN arithmetic arith_op arithmetic RPAREN\n        \n    \n    division : number DIVIDE number\n     concate : string\n        |   concate PLUS concate\n        |   LPAREN concate PLUS concate RPAREN\n     comparison : values\n        |   boolean\n        |   comparison comp_op comparison\n        |   LPAREN comparison comp_op number comparison\n        |   int_comparison\n        |   string_comparison\n     int_comparison : boolean\n        |   number comp_op number\n        |   LPAREN number comp_op number RPAREN\n     string_comparison : boolean\n        |   string comp_op string\n        |   LPAREN string comp_op string RPAREN\n     logic : comparison\n        |   logic logic_op logic\n        |   LPAREN logic logic_op logic RPAREN\n        |   LOGICAL_NOT logic\n     logic_op : LOGICAL_AND\n        |   LOGICAL_OR\n     arith_op : PLUS\n        |   MINUS\n        |   TIMES\n    \n      comp_op : EQUAL\n                 | NOT_EQUAL\n                 | LESS\n                 | LESS_EQUAL\n                 | GREATER\n                 | GREATER_EQUAL\n       values : value\n             | value COMMA values\n value : IDENTIFIER\n         | number\n         | string\n         | list\n  number : INTEGER \n                | DOUBLE\n      string : STRING\n     boolean : TRUE\n                | FALSE\n     list : LSQUARE RSQUARE\n                | LSQUARE values RSQUARE\n     list_assigment :   LIST_TYPE IDENTIFIER ASSIGN list SEMICOLON\n                      |    LIST_TYPE LESS type GREATER IDENTIFIER ASSIGN list SEMICOLON\n\n    \n    function : type IDENTIFIER LPAREN parameters RPAREN LBRACE lines RBRACE\n     lines : line LINE_BREAK lines\n            | line lines\n            | line\n            | LINE_BREAK\n            |\n\n     line : print\n            | assignment\n            | function\n            | if_statement\n            | while_statement\n            | for_statement\n            | function_call\n            | reassignment\n            \n    \n      parameters : VOID\n                 | parameter\n                 | parameter COMMA parameters\n                 |\n      \n  parameter : type IDENTIFIER\n            | IDENTIFIER \n  \n    map : MAP_TYPE\n        | MAP_TYPE LESS type COMMA type GREATER\n    \n    map_assignment : MAP_TYPE IDENTIFIER ASSIGN LBRACE RBRACE SEMICOLON\n                   | MAP_TYPE LESS type COMMA type GREATER IDENTIFIER ASSIGN LBRACE values_map RBRACE SEMICOLON\n                   | MAP_TYPE LESS type COMMA type GREATER IDENTIFIER ASSIGN LBRACE RBRACE SEMICOLON\n    values_map : value COLON value\n                 | value COLON value COMMA values_map\n               \n    \n    set : SET_TYPE LESS type GREATER\n        | SET_TYPE LESS type GREATER LSQUARE values RSQUARE\n        | SET_TYPE LESS type GREATER LSQUARE RSQUARE\n    \n    queue : QUEUE_TYPE LESS type GREATER\n          | QUEUE_TYPE LESS type GREATER LSQUARE values RSQUARE\n          | QUEUE_TYPE LESS type GREATER LSQUARE RSQUARE\n    \n    while_statement : WHILE LPAREN logic RPAREN LBRACE lines RBRACE\n    \n    for_statement : FOR LPAREN assignment logic SEMICOLON reassignment RPAREN LBRACE lines RBRACE\n    '
    
_lr_action_items = {'LBRACE':([0,61,176,206,207,225,268,274,],[10,129,213,235,236,251,272,276,]),'$end':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,28,29,30,31,32,34,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,101,102,113,115,116,124,126,127,128,130,131,132,134,135,137,145,147,148,149,151,164,165,166,167,168,180,181,188,194,195,196,197,199,215,217,223,227,228,229,230,231,232,233,234,238,242,246,249,250,258,260,261,262,263,264,266,267,271,273,277,282,284,],[-11,0,-1,-2,-3,-4,-5,-6,-7,-8,-10,-68,-69,-70,-71,-72,-109,-17,-18,-19,-125,-126,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,-126,-124,-95,-110,-111,-118,-110,-111,-50,-9,-74,-73,-78,-77,-93,-109,-71,-42,-41,-55,-123,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,-28,-51,-15,-52,-47,-75,-79,-94,-83,-88,-91,-120,-27,-14,-33,-13,-144,-30,-32,-12,-29,-31,-49,-155,-122,-121,-156,-146,-145,]),'PRINT':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,22,28,30,31,32,34,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,101,113,115,116,124,126,127,128,129,131,132,134,135,137,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,215,217,223,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[23,-129,-128,-130,-131,-132,-133,23,-135,-68,-69,-70,-134,-72,-17,-18,-19,23,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,23,-95,-110,-111,-118,-110,-111,-50,23,-74,-73,-78,-77,-93,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,-28,-51,-15,-52,-47,-75,-79,-94,-83,-88,-91,23,23,-120,-27,-14,-33,-13,23,-144,-30,-32,-12,-29,-31,-49,-155,-122,23,-121,-156,-146,-145,]),'IF':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,22,28,30,31,32,34,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,67,68,69,70,88,97,101,113,115,116,124,126,127,128,129,131,132,134,135,137,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,215,217,223,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[25,-129,-128,-130,-131,-132,-133,25,-135,-68,-69,-70,-134,-72,-17,-18,-19,25,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,25,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,25,-95,-110,-111,-118,-110,-111,-50,25,-74,-73,-78,-77,-93,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,-28,-51,-15,-52,-47,-75,-79,-94,-83,-88,-91,25,25,-120,-27,-14,-33,-13,25,-144,-30,-32,-12,-29,-31,-49,-155,-122,25,-121,-156,-146,-145,]),'WHILE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,22,28,30,31,32,34,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,101,113,115,116,124,126,127,128,129,131,132,134,135,137,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,215,217,223,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[26,-129,-128,-130,-131,-132,-133,26,-135,-68,-69,-70,-134,-72,-17,-18,-19,26,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,26,-95,-110,-111,-118,-110,-111,-50,26,-74,-73,-78,-77,-93,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,-28,-51,-15,-52,-47,-75,-79,-94,-83,-88,-91,26,26,-120,-27,-14,-33,-13,26,-144,-30,-32,-12,-29,-31,-49,-155,-122,26,-121,-156,-146,-145,]),'FOR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,22,28,30,31,32,34,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,101,113,115,116,124,126,127,128,129,131,132,134,135,137,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,215,217,223,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[27,-129,-128,-130,-131,-132,-133,27,-135,-68,-69,-70,-134,-72,-17,-18,-19,27,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,27,-95,-110,-111,-118,-110,-111,-50,27,-74,-73,-78,-77,-93,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,-28,-51,-15,-52,-47,-75,-79,-94,-83,-88,-91,27,27,-120,-27,-14,-33,-13,27,-144,-30,-32,-12,-29,-31,-49,-155,-122,27,-121,-156,-146,-145,]),'LINE_BREAK':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,22,28,30,31,32,34,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,101,113,115,116,124,126,127,128,129,131,132,134,135,137,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,215,217,223,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[29,-129,-128,-130,-131,-132,-133,29,-135,-68,-69,-70,-134,-72,-17,-18,-19,101,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,29,-95,-110,-111,-118,-110,-111,-50,29,-74,-73,-78,-77,-93,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,-28,-51,-15,-52,-47,-75,-79,-94,-83,-88,-91,29,29,-120,-27,-14,-33,-13,29,-144,-30,-32,-12,-29,-31,-49,-155,-122,29,-121,-156,-146,-145,]),'IDENTIFIER':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,18,20,21,22,24,28,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,77,78,79,80,81,82,83,84,86,87,88,89,90,97,98,99,101,105,106,107,108,109,110,112,113,114,115,116,122,123,124,126,127,128,129,131,132,134,135,137,138,140,143,144,145,147,148,149,151,156,157,162,163,165,166,167,168,169,174,175,180,181,184,187,188,189,192,194,195,196,197,199,203,212,215,217,218,223,226,227,228,229,230,231,232,233,234,235,236,237,238,242,246,249,250,251,258,259,260,261,262,263,264,266,267,271,272,273,276,277,282,283,284,286,],[19,-129,-128,-130,-131,-132,-133,71,-135,-68,-69,-70,-134,-72,85,-17,-18,-19,97,71,-73,-77,-92,97,-80,-56,-57,-58,-59,-37,-61,-38,117,119,-65,-66,-67,121,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,97,-128,-129,-130,-131,-132,-133,-134,-135,97,-96,-97,139,141,-63,-64,142,-44,145,-43,97,145,-109,97,97,71,-101,-102,-103,-104,-105,-106,97,-95,97,-110,-111,179,97,-118,-110,-111,-50,71,-74,-73,-78,-77,-93,183,185,145,190,-109,-71,-42,-41,-55,97,97,97,209,-76,-87,-90,-82,97,-60,-62,-108,-119,145,145,-16,224,-67,-39,-40,-53,-54,-48,97,239,-28,-51,145,-15,190,-52,-47,-75,-79,-94,-83,-88,-91,71,71,256,-120,-27,-14,-33,-13,71,-144,270,-30,-32,-12,-29,-31,-49,-155,-122,71,-121,97,-156,-146,97,-145,97,]),'LPAREN':([0,12,13,14,16,19,20,21,22,23,24,25,26,27,30,31,32,33,34,50,51,52,53,54,55,56,57,58,59,71,72,73,74,75,76,77,78,79,85,87,90,97,98,99,105,106,107,108,109,110,112,113,114,115,116,124,126,127,131,132,133,134,135,136,137,143,145,147,151,154,155,156,157,162,165,166,167,168,169,178,180,181,184,186,187,188,196,197,203,215,216,218,220,223,227,229,230,231,232,233,234,238,242,246,249,250,258,260,261,262,263,264,273,282,284,],[24,-68,-69,-70,-72,89,-17,-18,-19,90,24,98,99,100,-73,-77,-92,114,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,89,133,-98,-99,-100,136,114,-96,-97,144,24,24,-109,114,114,-101,-102,-103,-104,-105,-106,169,-95,114,-110,-111,-118,-110,-111,-74,-73,133,-78,-77,136,-93,24,89,-71,-55,133,136,114,169,114,-76,-87,-90,-82,169,136,-108,-119,24,136,24,-16,-53,-54,169,-28,136,24,136,-15,-52,-75,-79,-94,-83,-88,-91,-120,-27,-14,-33,-13,-144,-30,-32,-12,-29,-31,-121,-146,-145,]),'LOGICAL_NOT':([0,12,13,14,16,20,21,22,24,30,31,32,33,34,50,51,52,53,54,55,56,57,58,59,77,78,79,87,90,97,98,99,113,114,115,116,124,126,127,131,132,134,135,137,143,145,147,151,156,162,165,166,167,168,180,181,184,187,188,196,197,215,218,223,227,229,230,231,232,233,234,238,242,246,249,250,258,260,261,262,263,264,273,282,284,],[33,-68,-69,-70,-72,-17,-18,-19,33,-73,-77,-92,33,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,33,-96,-97,33,33,-109,33,33,-95,33,-110,-111,-118,-110,-111,-74,-73,-78,-77,-93,33,-109,-71,-55,33,33,-76,-87,-90,-82,-108,-119,33,33,-16,-53,-54,-28,33,-15,-52,-75,-79,-94,-83,-88,-91,-120,-27,-14,-33,-13,-144,-30,-32,-12,-29,-31,-121,-146,-145,]),'FINAL':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,22,28,30,31,32,34,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,124,126,127,128,129,131,132,134,135,137,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,215,217,223,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[35,-129,-128,-130,-131,-132,-133,35,-135,-68,-69,-70,-134,-72,-17,-18,-19,35,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,35,35,-95,-110,-111,-118,-110,-111,-50,35,-74,-73,-78,-77,-93,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,-28,-51,-15,-52,-47,-75,-79,-94,-83,-88,-91,35,35,-120,-27,-14,-33,-13,35,-144,-30,-32,-12,-29,-31,-49,-155,-122,35,-121,-156,-146,-145,]),'CONST':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,22,28,30,31,32,34,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,124,126,127,128,129,131,132,134,135,137,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,215,217,223,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[36,-129,-128,-130,-131,-132,-133,36,-135,-68,-69,-70,-134,-72,-17,-18,-19,36,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,36,36,-95,-110,-111,-118,-110,-111,-50,36,-74,-73,-78,-77,-93,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,-28,-51,-15,-52,-47,-75,-79,-94,-83,-88,-91,36,36,-120,-27,-14,-33,-13,36,-144,-30,-32,-12,-29,-31,-49,-155,-122,36,-121,-156,-146,-145,]),'INTEGER_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[37,-129,-128,-130,-131,-132,-133,37,-135,-68,-69,-70,-134,-72,37,-17,-18,-19,37,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,37,37,-95,-110,-111,37,37,-118,-110,-111,-50,37,-74,-73,-78,-77,-93,37,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,37,-28,-51,-15,37,-52,-47,-75,-79,-94,-83,-88,-91,37,37,-120,-27,-14,-33,-13,37,-144,-30,-32,-12,-29,-31,-49,-155,-122,37,-121,-156,-146,-145,]),'DOUBLE_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[38,-129,-128,-130,-131,-132,-133,38,-135,-68,-69,-70,-134,-72,38,-17,-18,-19,38,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,38,38,-95,-110,-111,38,38,-118,-110,-111,-50,38,-74,-73,-78,-77,-93,38,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,38,-28,-51,-15,38,-52,-47,-75,-79,-94,-83,-88,-91,38,38,-120,-27,-14,-33,-13,38,-144,-30,-32,-12,-29,-31,-49,-155,-122,38,-121,-156,-146,-145,]),'BOOLEAN_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[39,-129,-128,-130,-131,-132,-133,39,-135,-68,-69,-70,-134,-72,39,-17,-18,-19,39,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,39,39,-95,-110,-111,39,39,-118,-110,-111,-50,39,-74,-73,-78,-77,-93,39,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,39,-28,-51,-15,39,-52,-47,-75,-79,-94,-83,-88,-91,39,39,-120,-27,-14,-33,-13,39,-144,-30,-32,-12,-29,-31,-49,-155,-122,39,-121,-156,-146,-145,]),'QUEUE_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[40,-129,-128,-130,-131,-132,-133,40,-135,-68,-69,-70,-134,-72,40,-17,-18,-19,40,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,40,40,-95,-110,-111,40,40,-118,-110,-111,-50,40,-74,-73,-78,-77,-93,40,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,40,-28,-51,-15,40,-52,-47,-75,-79,-94,-83,-88,-91,40,40,-120,-27,-14,-33,-13,40,-144,-30,-32,-12,-29,-31,-49,-155,-122,40,-121,-156,-146,-145,]),'STRING_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[41,-129,-128,-130,-131,-132,-133,41,-135,-68,-69,-70,-134,-72,41,-17,-18,-19,41,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,41,41,-95,-110,-111,174,174,-118,-110,-111,-50,41,-74,-73,-78,-77,-93,174,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,174,-28,-51,-15,174,-52,-47,-75,-79,-94,-83,-88,-91,41,41,-120,-27,-14,-33,-13,41,-144,-30,-32,-12,-29,-31,-49,-155,-122,41,-121,-156,-146,-145,]),'ENUM_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[42,-129,-128,-130,-131,-132,-133,42,-135,-68,-69,-70,-134,-72,42,-17,-18,-19,42,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,42,42,-95,-110,-111,42,42,-118,-110,-111,-50,42,-74,-73,-78,-77,-93,42,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,42,-28,-51,-15,42,-52,-47,-75,-79,-94,-83,-88,-91,42,42,-120,-27,-14,-33,-13,42,-144,-30,-32,-12,-29,-31,-49,-155,-122,42,-121,-156,-146,-145,]),'VAR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[43,-129,-128,-130,-131,-132,-133,43,-135,-68,-69,-70,-134,-72,43,-17,-18,-19,43,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,43,43,-95,-110,-111,175,175,-118,-110,-111,-50,43,-74,-73,-78,-77,-93,175,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,175,-28,-51,-15,175,-52,-47,-75,-79,-94,-83,-88,-91,43,43,-120,-27,-14,-33,-13,43,-144,-30,-32,-12,-29,-31,-49,-155,-122,43,-121,-156,-146,-145,]),'LIST_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[44,-129,-128,-130,-131,-132,-133,44,-135,-68,-69,-70,-134,-72,82,-17,-18,-19,44,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,44,44,-95,-110,-111,82,82,-118,-110,-111,-50,44,-74,-73,-78,-77,-93,82,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,82,-28,-51,-15,82,-52,-47,-75,-79,-94,-83,-88,-91,44,44,-120,-27,-14,-33,-13,44,-144,-30,-32,-12,-29,-31,-49,-155,-122,44,-121,-156,-146,-145,]),'MAP_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[45,-129,-128,-130,-131,-132,-133,45,-135,-68,-69,-70,-134,-72,83,-17,-18,-19,45,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,45,45,-95,-110,-111,83,83,-118,-110,-111,-50,45,-74,-73,-78,-77,-93,83,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,83,-28,-51,-15,83,-52,-47,-75,-79,-94,-83,-88,-91,45,45,-120,-27,-14,-33,-13,45,-144,-30,-32,-12,-29,-31,-49,-155,-122,45,-121,-156,-146,-145,]),'SET_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[46,-129,-128,-130,-131,-132,-133,46,-135,-68,-69,-70,-134,-72,46,-17,-18,-19,46,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,46,46,-95,-110,-111,46,46,-118,-110,-111,-50,46,-74,-73,-78,-77,-93,46,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,46,-28,-51,-15,46,-52,-47,-75,-79,-94,-83,-88,-91,46,46,-120,-27,-14,-33,-13,46,-144,-30,-32,-12,-29,-31,-49,-155,-122,46,-121,-156,-146,-145,]),'DYNAMIC_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[47,-129,-128,-130,-131,-132,-133,47,-135,-68,-69,-70,-134,-72,47,-17,-18,-19,47,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,47,47,-95,-110,-111,47,47,-118,-110,-111,-50,47,-74,-73,-78,-77,-93,47,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,47,-28,-51,-15,47,-52,-47,-75,-79,-94,-83,-88,-91,47,47,-120,-27,-14,-33,-13,47,-144,-30,-32,-12,-29,-31,-49,-155,-122,47,-121,-156,-146,-145,]),'VOID':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,28,30,31,32,34,35,36,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,88,97,100,101,113,115,116,118,120,124,126,127,128,129,131,132,134,135,137,144,145,147,148,149,151,165,166,167,168,180,181,188,194,195,196,197,199,214,215,217,223,226,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,258,260,261,262,263,264,266,267,271,272,273,277,282,284,],[48,-129,-128,-130,-131,-132,-133,48,-135,-68,-69,-70,-134,-72,48,-17,-18,-19,48,-73,-77,-92,-80,-45,-46,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,48,48,-95,-110,-111,48,48,-118,-110,-111,-50,48,-74,-73,-78,-77,-93,192,-109,-71,-42,-41,-55,-76,-87,-90,-82,-108,-119,-16,-39,-40,-53,-54,-48,48,-28,-51,-15,192,-52,-47,-75,-79,-94,-83,-88,-91,48,48,-120,-27,-14,-33,-13,48,-144,-30,-32,-12,-29,-31,-49,-155,-122,48,-121,-156,-146,-145,]),'INTEGER':([0,12,13,14,16,20,21,22,24,30,31,32,33,34,50,51,52,53,54,55,56,57,58,59,60,72,73,74,75,77,78,79,87,88,89,90,97,98,99,103,104,105,106,107,108,109,110,112,113,114,115,116,123,124,126,127,131,132,133,134,135,137,143,145,147,151,154,156,157,158,162,165,166,167,168,169,180,181,184,187,188,196,197,203,215,218,223,227,229,230,231,232,233,234,238,242,246,249,250,258,260,261,262,263,264,273,276,282,283,284,286,],[51,-68,-69,-70,-72,-17,-18,-19,51,-73,-77,-92,51,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,51,51,-98,-99,-100,51,-96,-97,51,51,51,51,-109,51,51,51,51,-101,-102,-103,-104,-105,-106,51,-95,51,-110,-111,51,-118,-110,-111,-74,-73,51,-78,-77,-93,51,-109,-71,-55,51,51,51,51,51,-76,-87,-90,-82,51,-108,-119,51,51,-16,-53,-54,51,-28,51,-15,-52,-75,-79,-94,-83,-88,-91,-120,-27,-14,-33,-13,-144,-30,-32,-12,-29,-31,-121,51,-146,51,-145,51,]),'DOUBLE':([0,12,13,14,16,20,21,22,24,30,31,32,33,34,50,51,52,53,54,55,56,57,58,59,60,72,73,74,75,77,78,79,87,88,89,90,97,98,99,103,104,105,106,107,108,109,110,112,113,114,115,116,123,124,126,127,131,132,133,134,135,137,143,145,147,151,154,156,157,158,162,165,166,167,168,169,180,181,184,187,188,196,197,203,215,218,223,227,229,230,231,232,233,234,238,242,246,249,250,258,260,261,262,263,264,273,276,282,283,284,286,],[52,-68,-69,-70,-72,-17,-18,-19,52,-73,-77,-92,52,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,52,52,-98,-99,-100,52,-96,-97,52,52,52,52,-109,52,52,52,52,-101,-102,-103,-104,-105,-106,52,-95,52,-110,-111,52,-118,-110,-111,-74,-73,52,-78,-77,-93,52,-109,-71,-55,52,52,52,52,52,-76,-87,-90,-82,52,-108,-119,52,52,-16,-53,-54,52,-28,52,-15,-52,-75,-79,-94,-83,-88,-91,-120,-27,-14,-33,-13,-144,-30,-32,-12,-29,-31,-121,52,-146,52,-145,52,]),'STRING':([0,12,13,14,16,20,21,22,24,30,31,32,33,34,50,51,52,53,54,55,56,57,58,59,60,76,77,78,79,87,89,90,97,98,99,105,106,107,108,109,110,111,112,113,114,115,116,123,124,126,127,131,132,134,135,136,137,143,145,147,151,155,156,157,159,162,165,166,167,168,169,178,180,181,184,186,187,188,196,197,203,215,216,218,220,223,227,229,230,231,232,233,234,238,242,246,249,250,258,260,261,262,263,264,273,276,282,283,284,286,],[53,-68,-69,-70,-72,-17,-18,-19,53,-73,-77,-92,53,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,53,53,53,-96,-97,53,53,53,-109,53,53,-101,-102,-103,-104,-105,-106,53,53,-95,53,-110,-111,53,-118,-110,-111,-74,-73,-78,-77,53,-93,53,-109,-71,-55,53,53,53,53,53,-76,-87,-90,-82,53,53,-108,-119,53,53,53,-16,-53,-54,53,-28,53,53,53,-15,-52,-75,-79,-94,-83,-88,-91,-120,-27,-14,-33,-13,-144,-30,-32,-12,-29,-31,-121,53,-146,53,-145,53,]),'TRUE':([0,12,13,14,16,20,21,22,24,30,31,32,33,34,50,51,52,53,54,55,56,57,58,59,77,78,79,87,90,97,98,99,105,106,107,108,109,110,112,113,114,115,116,124,126,127,131,132,134,135,137,143,145,147,151,156,157,162,165,166,167,168,169,180,181,184,187,188,196,197,203,215,218,223,227,229,230,231,232,233,234,238,242,246,249,250,258,260,261,262,263,264,273,282,284,],[58,-68,-69,-70,-72,-17,-18,-19,58,-73,-77,-92,58,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,58,-96,-97,58,58,-109,58,58,-101,-102,-103,-104,-105,-106,58,-95,58,-110,-111,-118,-110,-111,-74,-73,-78,-77,-93,58,-109,-71,-55,58,58,58,-76,-87,-90,-82,58,-108,-119,58,58,-16,-53,-54,58,-28,58,-15,-52,-75,-79,-94,-83,-88,-91,-120,-27,-14,-33,-13,-144,-30,-32,-12,-29,-31,-121,-146,-145,]),'FALSE':([0,12,13,14,16,20,21,22,24,30,31,32,33,34,50,51,52,53,54,55,56,57,58,59,77,78,79,87,90,97,98,99,105,106,107,108,109,110,112,113,114,115,116,124,126,127,131,132,134,135,137,143,145,147,151,156,157,162,165,166,167,168,169,180,181,184,187,188,196,197,203,215,218,223,227,229,230,231,232,233,234,238,242,246,249,250,258,260,261,262,263,264,273,282,284,],[59,-68,-69,-70,-72,-17,-18,-19,59,-73,-77,-92,59,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,59,-96,-97,59,59,-109,59,59,-101,-102,-103,-104,-105,-106,59,-95,59,-110,-111,-118,-110,-111,-74,-73,-78,-77,-93,59,-109,-71,-55,59,59,59,-76,-87,-90,-82,59,-108,-119,59,59,-16,-53,-54,59,-28,59,-15,-52,-75,-79,-94,-83,-88,-91,-120,-27,-14,-33,-13,-144,-30,-32,-12,-29,-31,-121,-146,-145,]),'LSQUARE':([0,12,13,14,16,20,21,22,24,30,31,32,33,34,50,51,52,53,54,55,56,57,58,59,60,77,78,79,87,89,90,97,98,99,105,106,107,108,109,110,112,113,114,115,116,123,124,126,127,131,132,134,135,137,143,145,147,151,156,157,162,165,166,167,168,169,172,180,181,184,187,188,196,197,203,215,218,223,227,229,230,231,232,233,234,238,242,246,249,250,257,258,260,261,262,263,264,273,276,282,283,284,286,],[60,-68,-69,-70,-72,-17,-18,-19,60,-73,-77,-92,60,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,60,60,-96,-97,60,60,60,-109,60,60,-101,-102,-103,-104,-105,-106,60,-95,60,-110,-111,60,-118,-110,-111,-74,-73,-78,-77,-93,60,-109,-71,-55,60,60,60,-76,-87,-90,-82,60,60,-108,-119,60,60,-16,-53,-54,60,-28,60,-15,-52,-75,-79,-94,-83,-88,-91,-120,-27,-14,-33,-13,60,-144,-30,-32,-12,-29,-31,-121,60,-146,60,-145,60,]),'ELSE':([6,66,128,217,266,],[61,61,61,-51,-49,]),'RBRACE':([10,12,13,14,16,20,21,22,28,29,30,31,32,34,50,51,52,53,54,55,56,57,58,59,62,63,64,65,66,67,68,69,70,88,97,101,102,113,115,116,124,126,127,128,129,131,132,134,135,137,145,147,148,149,151,164,165,166,167,168,180,181,182,188,194,195,196,197,199,213,215,217,223,227,228,229,230,231,232,233,234,235,236,238,242,246,249,250,251,253,254,258,260,261,262,263,264,265,266,267,271,272,273,275,276,277,278,282,284,285,287,],[-127,-68,-69,-70,-72,-17,-18,-19,-125,-126,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,130,-128,-129,-130,-131,-132,-133,-134,-135,-43,-109,-126,-124,-95,-110,-111,-118,-110,-111,-50,-127,-74,-73,-78,-77,-93,-109,-71,-42,-41,-55,-123,-76,-87,-90,-82,-108,-119,217,-16,-39,-40,-53,-54,-48,240,-28,-51,-15,-52,-47,-75,-79,-94,-83,-88,-91,-127,-127,-120,-27,-14,-33,-13,-127,266,267,-144,-30,-32,-12,-29,-31,271,-49,-155,-122,-127,-121,277,279,-156,281,-146,-145,-147,-148,]),'SEMICOLON':([12,13,14,16,30,31,32,34,50,51,52,53,54,55,56,57,58,59,88,97,113,115,116,124,126,127,131,132,134,135,137,145,146,147,148,151,153,165,166,167,168,180,181,188,196,197,198,208,211,215,219,221,222,227,229,230,231,232,233,234,240,243,244,245,247,248,269,279,281,],[-68,-69,-70,-72,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,149,-109,-95,-110,-111,-118,-110,-111,-74,-73,-78,-77,-93,-109,194,-71,195,197,199,-76,-87,-90,-82,-108,-119,223,227,-54,228,237,238,242,246,249,250,-52,-75,-79,-94,-83,-88,-91,258,260,261,262,263,264,273,282,284,]),'RPAREN':([12,13,14,16,30,31,32,34,50,51,52,53,54,55,56,57,58,59,88,89,90,97,113,115,116,124,126,127,131,132,134,135,137,144,145,147,148,149,150,151,152,160,161,165,166,167,168,180,181,190,191,192,193,194,195,196,197,200,201,202,204,205,224,226,227,229,230,231,232,233,234,252,255,],[-68,-69,-70,-72,-73,-77,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-43,151,153,-109,-95,-110,-111,-118,-110,-111,-74,-73,-78,-77,-93,-139,-109,-71,-42,-41,196,-55,198,206,207,-76,-87,-90,-82,-108,-119,-141,225,-136,-137,-39,-40,-53,-54,229,230,231,233,234,-140,-139,-52,-75,-79,-94,-83,-88,-91,-138,268,]),'PLUS':([12,13,30,31,51,52,53,91,92,95,96,131,132,134,135,200,201,215,221,229,230,244,248,],[73,76,-73,-77,-113,-114,-115,73,155,-73,-77,73,-73,76,-77,73,76,76,76,-75,-79,76,76,]),'MINUS':([12,30,51,52,91,95,131,132,200,229,],[74,-73,-113,-114,74,-73,74,-73,74,-75,]),'TIMES':([12,30,51,52,91,95,131,132,200,229,],[75,-73,-113,-114,75,-73,75,-73,75,-75,]),'LOGICAL_AND':([14,19,30,31,32,34,50,51,52,53,54,55,56,57,58,59,93,94,95,96,97,113,115,116,124,126,127,137,145,160,161,166,167,168,170,171,180,181,202,203,204,205,208,231,232,233,234,],[78,-109,-110,-111,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,78,-92,-110,-111,-109,78,-110,-111,-118,-110,-111,78,-109,78,78,-87,-90,-82,-110,-111,-108,-119,78,-110,-87,-90,78,-94,-83,-88,-91,]),'LOGICAL_OR':([14,19,30,31,32,34,50,51,52,53,54,55,56,57,58,59,93,94,95,96,97,113,115,116,124,126,127,137,145,160,161,166,167,168,170,171,180,181,202,203,204,205,208,231,232,233,234,],[79,-109,-110,-111,-92,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,79,-92,-110,-111,-109,79,-110,-111,-118,-110,-111,79,-109,79,79,-87,-90,-82,-110,-111,-108,-119,79,-110,-87,-90,79,-94,-83,-88,-91,]),'QUESTION_MARK':([18,37,38,39,40,41,42,43,44,45,46,47,48,49,80,81,82,83,163,],[86,-56,-57,-58,-59,-37,-61,-38,-63,-64,-65,-66,-67,86,86,86,-63,-64,86,]),'ASSIGN':([19,71,85,117,119,121,139,141,142,179,183,185,209,239,256,270,],[87,87,143,172,176,178,184,186,187,216,218,220,143,257,87,274,]),'INLINE_ARITH':([19,71,256,],[88,88,88,]),'COMMA':([19,30,31,37,38,39,40,42,46,47,48,50,51,52,53,57,82,83,95,96,97,115,116,124,126,127,145,170,171,174,175,177,181,190,193,203,224,285,],[-109,-110,-111,-56,-57,-58,-59,-61,-65,-66,-67,-112,-113,-114,-115,123,-63,-64,-110,-111,-109,-110,-111,-118,-110,-111,-109,-110,-111,-60,-62,214,-119,-141,226,-110,-140,286,]),'EQUAL':([19,30,31,32,34,50,51,52,53,54,55,56,57,58,59,94,95,96,97,115,116,124,126,127,145,166,167,168,170,171,180,181,203,204,205,210,232,233,234,],[-109,105,105,105,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,105,105,105,-109,105,105,-118,-110,-111,-109,-87,-90,105,105,105,-108,-119,105,-87,-90,105,105,-88,-91,]),'NOT_EQUAL':([19,30,31,32,34,50,51,52,53,54,55,56,57,58,59,94,95,96,97,115,116,124,126,127,145,166,167,168,170,171,180,181,203,204,205,210,232,233,234,],[-109,106,106,106,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,106,106,106,-109,106,106,-118,-110,-111,-109,-87,-90,106,106,106,-108,-119,106,-87,-90,106,106,-88,-91,]),'LESS':([19,30,31,32,34,44,45,50,51,52,53,54,55,56,57,58,59,94,95,96,97,115,116,124,126,127,145,166,167,168,170,171,180,181,203,204,205,210,232,233,234,],[-109,107,107,107,-80,118,120,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,107,107,107,-109,107,107,-118,-110,-111,-109,-87,-90,107,107,107,-108,-119,107,-87,-90,107,107,-88,-91,]),'LESS_EQUAL':([19,30,31,32,34,50,51,52,53,54,55,56,57,58,59,94,95,96,97,115,116,124,126,127,145,166,167,168,170,171,180,181,203,204,205,210,232,233,234,],[-109,108,108,108,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,108,108,108,-109,108,108,-118,-110,-111,-109,-87,-90,108,108,108,-108,-119,108,-87,-90,108,108,-88,-91,]),'GREATER':([19,30,31,32,34,37,38,39,40,42,46,47,48,50,51,52,53,54,55,56,57,58,59,82,83,94,95,96,97,115,116,124,126,127,145,166,167,168,170,171,173,174,175,180,181,203,204,205,210,232,233,234,241,],[-109,109,109,109,-80,-56,-57,-58,-59,-61,-65,-66,-67,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,-63,-64,109,109,109,-109,109,109,-118,-110,-111,-109,-87,-90,109,109,109,212,-60,-62,-108,-119,109,-87,-90,109,109,-88,-91,259,]),'GREATER_EQUAL':([19,30,31,32,34,50,51,52,53,54,55,56,57,58,59,94,95,96,97,115,116,124,126,127,145,166,167,168,170,171,180,181,203,204,205,210,232,233,234,],[-109,110,110,110,-80,-112,-113,-114,-115,-81,-84,-85,-107,-116,-117,110,110,110,-109,110,110,-118,-110,-111,-109,-87,-90,110,110,110,-108,-119,110,-87,-90,110,110,-88,-91,]),'DIVIDE':([30,51,52,],[103,-113,-114,]),'RSQUARE':([50,51,52,53,57,60,97,124,125,126,127,180,181,],[-112,-113,-114,-115,-107,124,-109,-118,181,-110,-111,-108,-119,]),'COLON':([50,51,52,53,97,124,126,127,181,280,],[-112,-113,-114,-115,-109,-118,-110,-111,-119,283,]),'NULL':([216,220,],[243,247,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,87,90,143,184,187,218,],[2,146,152,188,219,222,245,]),'assignment':([0,10,28,100,101,129,235,236,251,272,],[3,64,64,162,64,64,64,64,64,64,]),'print':([0,10,28,101,129,235,236,251,272,],[4,63,63,63,63,63,63,63,63,]),'function':([0,10,28,101,129,235,236,251,272,],[5,65,65,65,65,65,65,65,65,]),'if_statement':([0,10,28,61,101,129,235,236,251,272,],[6,66,66,128,66,66,66,66,66,66,]),'while_statement':([0,10,28,101,129,235,236,251,272,],[7,67,67,67,67,67,67,67,67,]),'for_statement':([0,10,28,101,129,235,236,251,272,],[8,68,68,68,68,68,68,68,68,]),'lines':([0,10,28,101,129,235,236,251,272,],[9,62,102,164,182,253,254,265,275,]),'reassignment':([0,10,28,101,129,235,236,237,251,272,],[11,70,70,70,70,70,70,255,70,70,]),'arithmetic':([0,24,72,87,90,133,143,154,184,187,218,],[12,91,131,12,12,91,12,200,12,12,12,]),'concate':([0,24,76,87,90,136,143,155,178,184,186,187,216,218,220,],[13,92,134,13,13,92,13,201,215,13,221,13,244,13,248,]),'logic':([0,24,33,77,87,90,98,99,114,143,156,162,184,187,218,],[14,93,113,137,14,14,160,161,93,14,202,208,14,14,14,]),'function_call':([0,10,28,87,90,101,129,143,184,187,218,235,236,251,272,],[15,69,69,147,147,69,69,147,147,147,147,69,69,69,69,]),'division':([0,87,90,143,184,187,218,],[16,16,16,16,16,16,16,]),'modifier':([0,10,28,100,101,129,235,236,251,272,],[17,17,17,17,17,17,17,17,17,17,]),'type':([0,10,17,28,100,101,118,120,129,144,214,226,235,236,251,272,],[18,18,80,18,163,18,173,177,18,189,241,189,18,18,18,18,]),'string_assignment':([0,10,28,100,101,129,235,236,251,272,],[20,20,20,20,20,20,20,20,20,20,]),'list_assigment':([0,10,28,100,101,129,235,236,251,272,],[21,21,21,21,21,21,21,21,21,21,]),'map_assignment':([0,10,28,100,101,129,235,236,251,272,],[22,22,22,22,22,22,22,22,22,22,]),'line':([0,10,28,101,129,235,236,251,272,],[28,28,28,28,28,28,28,28,28,]),'number':([0,24,33,60,72,77,87,88,89,90,98,99,103,104,112,114,123,133,143,154,156,157,158,162,169,184,187,203,218,276,283,286,],[30,95,115,126,132,115,30,148,126,30,115,115,165,166,115,170,126,132,30,132,115,203,204,115,170,30,30,115,30,126,126,126,]),'string':([0,24,33,60,76,77,87,89,90,98,99,111,112,114,123,136,143,155,156,157,159,162,169,178,184,186,187,203,216,218,220,276,283,286,],[31,96,116,127,135,116,31,127,31,116,116,167,116,171,127,135,31,135,116,116,205,116,171,135,31,135,31,116,135,31,135,127,127,127,]),'comparison':([0,24,33,77,87,90,98,99,112,114,143,156,157,162,169,184,187,203,218,],[32,94,32,32,32,32,32,32,168,94,32,32,168,32,210,32,32,232,32,]),'values':([0,24,33,60,77,87,89,90,98,99,112,114,123,143,156,157,162,169,184,187,203,218,],[34,34,34,125,34,34,150,34,34,34,34,34,180,34,34,34,34,34,34,34,34,34,]),'type_string':([0,10,17,28,100,101,129,235,236,251,272,],[49,49,81,49,49,49,49,49,49,49,49,]),'list':([0,24,33,60,77,87,89,90,98,99,112,114,123,143,156,157,162,169,172,184,187,203,218,257,276,283,286,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,211,50,50,50,50,269,50,50,50,]),'boolean':([0,24,33,77,87,90,98,99,112,114,143,156,157,162,169,184,187,203,218,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'int_comparison':([0,24,33,77,87,90,98,99,112,114,143,156,157,162,169,184,187,203,218,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'string_comparison':([0,24,33,77,87,90,98,99,112,114,143,156,157,162,169,184,187,203,218,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'value':([0,24,33,60,77,87,89,90,98,99,112,114,123,143,156,157,162,169,184,187,203,218,276,283,286,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,280,285,280,]),'arith_op':([12,91,131,200,],[72,154,72,72,]),'logic_op':([14,93,113,137,160,161,202,208,],[77,156,77,77,77,77,77,77,]),'nullable':([18,49,80,81,163,],[84,122,138,140,84,]),'comp_op':([30,31,32,94,95,96,115,116,168,170,171,203,210,232,],[104,111,112,157,158,159,104,111,112,158,159,104,157,112,]),'parameters':([144,226,],[191,252,]),'parameter':([144,226,],[193,193,]),'values_map':([276,286,],[278,287,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement','sintactico.py',6),
  ('statement -> assignment','statement',1,'p_statement','sintactico.py',7),
  ('statement -> print','statement',1,'p_statement','sintactico.py',8),
  ('statement -> function','statement',1,'p_statement','sintactico.py',9),
  ('statement -> if_statement','statement',1,'p_statement','sintactico.py',10),
  ('statement -> while_statement','statement',1,'p_statement','sintactico.py',11),
  ('statement -> for_statement','statement',1,'p_statement','sintactico.py',12),
  ('statement -> lines','statement',1,'p_statement','sintactico.py',13),
  ('statement -> LBRACE lines RBRACE','statement',3,'p_statement','sintactico.py',14),
  ('statement -> reassignment','statement',1,'p_statement','sintactico.py',15),
  ('statement -> <empty>','statement',0,'p_statement','sintactico.py',16),
  ('assignment -> modifier type nullable IDENTIFIER ASSIGN expression SEMICOLON','assignment',7,'p_assignment','sintactico.py',20),
  ('assignment -> type nullable IDENTIFIER ASSIGN expression SEMICOLON','assignment',6,'p_assignment','sintactico.py',21),
  ('assignment -> modifier type IDENTIFIER ASSIGN expression SEMICOLON','assignment',6,'p_assignment','sintactico.py',22),
  ('assignment -> type IDENTIFIER ASSIGN expression SEMICOLON','assignment',5,'p_assignment','sintactico.py',23),
  ('assignment -> type IDENTIFIER ASSIGN expression','assignment',4,'p_assignment','sintactico.py',24),
  ('assignment -> string_assignment','assignment',1,'p_assignment','sintactico.py',25),
  ('assignment -> list_assigment','assignment',1,'p_assignment','sintactico.py',26),
  ('assignment -> map_assignment','assignment',1,'p_assignment','sintactico.py',27),
  ('int_assignment -> number_type IDENTIFIER ASSIGN arithmetic SEMICOLON','int_assignment',5,'p_int_assignment','sintactico.py',32),
  ('int_assignment -> number_type IDENTIFIER ASSIGN arithmetic','int_assignment',4,'p_int_assignment','sintactico.py',33),
  ('int_assignment -> modifier number_type nullable IDENTIFIER ASSIGN NULL SEMICOLON','int_assignment',7,'p_int_assignment','sintactico.py',34),
  ('int_assignment -> number_type nullable IDENTIFIER ASSIGN NULL SEMICOLON','int_assignment',6,'p_int_assignment','sintactico.py',35),
  ('int_assignment -> modifier number_type nullable IDENTIFIER ASSIGN arithmetic SEMICOLON','int_assignment',7,'p_int_assignment','sintactico.py',36),
  ('int_assignment -> number_type nullable IDENTIFIER ASSIGN arithmetic SEMICOLON','int_assignment',6,'p_int_assignment','sintactico.py',37),
  ('int_assignment -> modifier number_type IDENTIFIER ASSIGN arithmetic SEMICOLON','int_assignment',6,'p_int_assignment','sintactico.py',38),
  ('string_assignment -> type_string IDENTIFIER ASSIGN concate SEMICOLON','string_assignment',5,'p_string_assignment','sintactico.py',44),
  ('string_assignment -> type_string IDENTIFIER ASSIGN concate','string_assignment',4,'p_string_assignment','sintactico.py',45),
  ('string_assignment -> modifier type_string nullable IDENTIFIER ASSIGN NULL SEMICOLON','string_assignment',7,'p_string_assignment','sintactico.py',46),
  ('string_assignment -> type_string nullable IDENTIFIER ASSIGN NULL SEMICOLON','string_assignment',6,'p_string_assignment','sintactico.py',47),
  ('string_assignment -> modifier type_string nullable IDENTIFIER ASSIGN concate SEMICOLON','string_assignment',7,'p_string_assignment','sintactico.py',48),
  ('string_assignment -> type_string nullable IDENTIFIER ASSIGN concate SEMICOLON','string_assignment',6,'p_string_assignment','sintactico.py',49),
  ('string_assignment -> modifier type_string IDENTIFIER ASSIGN concate SEMICOLON','string_assignment',6,'p_string_assignment','sintactico.py',50),
  ('number_type -> INTEGER_TYPE','number_type',1,'p_number_type','sintactico.py',55),
  ('number_type -> DOUBLE_TYPE','number_type',1,'p_number_type','sintactico.py',56),
  ('number_type -> VAR','number_type',1,'p_number_type','sintactico.py',57),
  ('type_string -> STRING_TYPE','type_string',1,'p_type_string','sintactico.py',61),
  ('type_string -> VAR','type_string',1,'p_type_string','sintactico.py',62),
  ('reassignment -> IDENTIFIER ASSIGN expression SEMICOLON','reassignment',4,'p_reassignment','sintactico.py',67),
  ('reassignment -> IDENTIFIER INLINE_ARITH number SEMICOLON','reassignment',4,'p_reassignment','sintactico.py',68),
  ('reassignment -> IDENTIFIER INLINE_ARITH SEMICOLON','reassignment',3,'p_reassignment','sintactico.py',69),
  ('reassignment -> IDENTIFIER INLINE_ARITH number','reassignment',3,'p_reassignment','sintactico.py',70),
  ('reassignment -> IDENTIFIER INLINE_ARITH','reassignment',2,'p_reassignment','sintactico.py',71),
  ('nullable -> QUESTION_MARK','nullable',1,'p_nullable','sintactico.py',75),
  ('modifier -> FINAL','modifier',1,'p_modifier','sintactico.py',79),
  ('modifier -> CONST','modifier',1,'p_modifier','sintactico.py',80),
  ('print -> PRINT LPAREN expression RPAREN SEMICOLON','print',5,'p_print','sintactico.py',84),
  ('print -> PRINT LPAREN RPAREN SEMICOLON','print',4,'p_print','sintactico.py',85),
  ('if_statement -> IF LPAREN logic RPAREN LBRACE lines RBRACE','if_statement',7,'p_if_statement','sintactico.py',90),
  ('if_statement -> if_statement ELSE if_statement','if_statement',3,'p_if_statement','sintactico.py',91),
  ('if_statement -> if_statement ELSE LBRACE lines RBRACE','if_statement',5,'p_if_statement','sintactico.py',92),
  ('function_call -> IDENTIFIER LPAREN values RPAREN SEMICOLON','function_call',5,'p_function_call','sintactico.py',98),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','sintactico.py',99),
  ('function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON','function_call',4,'p_function_call','sintactico.py',100),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','sintactico.py',101),
  ('type -> INTEGER_TYPE','type',1,'p_type','sintactico.py',105),
  ('type -> DOUBLE_TYPE','type',1,'p_type','sintactico.py',106),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','sintactico.py',107),
  ('type -> QUEUE_TYPE','type',1,'p_type','sintactico.py',108),
  ('type -> STRING_TYPE','type',1,'p_type','sintactico.py',109),
  ('type -> ENUM_TYPE','type',1,'p_type','sintactico.py',110),
  ('type -> VAR','type',1,'p_type','sintactico.py',111),
  ('type -> LIST_TYPE','type',1,'p_type','sintactico.py',112),
  ('type -> MAP_TYPE','type',1,'p_type','sintactico.py',113),
  ('type -> SET_TYPE','type',1,'p_type','sintactico.py',114),
  ('type -> DYNAMIC_TYPE','type',1,'p_type','sintactico.py',115),
  ('type -> VOID','type',1,'p_type','sintactico.py',116),
  ('expression -> arithmetic','expression',1,'p_expression','sintactico.py',121),
  ('expression -> concate','expression',1,'p_expression','sintactico.py',122),
  ('expression -> logic','expression',1,'p_expression','sintactico.py',123),
  ('expression -> function_call','expression',1,'p_expression','sintactico.py',124),
  ('expression -> division','expression',1,'p_expression','sintactico.py',125),
  ('arithmetic -> number','arithmetic',1,'p_arithmetic','sintactico.py',130),
  ('arithmetic -> arithmetic arith_op arithmetic','arithmetic',3,'p_arithmetic','sintactico.py',131),
  ('arithmetic -> LPAREN arithmetic arith_op arithmetic RPAREN','arithmetic',5,'p_arithmetic','sintactico.py',132),
  ('division -> number DIVIDE number','division',3,'p_division','sintactico.py',139),
  ('concate -> string','concate',1,'p_concate','sintactico.py',143),
  ('concate -> concate PLUS concate','concate',3,'p_concate','sintactico.py',144),
  ('concate -> LPAREN concate PLUS concate RPAREN','concate',5,'p_concate','sintactico.py',145),
  ('comparison -> values','comparison',1,'p_comparison','sintactico.py',149),
  ('comparison -> boolean','comparison',1,'p_comparison','sintactico.py',150),
  ('comparison -> comparison comp_op comparison','comparison',3,'p_comparison','sintactico.py',151),
  ('comparison -> LPAREN comparison comp_op number comparison','comparison',5,'p_comparison','sintactico.py',152),
  ('comparison -> int_comparison','comparison',1,'p_comparison','sintactico.py',153),
  ('comparison -> string_comparison','comparison',1,'p_comparison','sintactico.py',154),
  ('int_comparison -> boolean','int_comparison',1,'p_int_comparison','sintactico.py',164),
  ('int_comparison -> number comp_op number','int_comparison',3,'p_int_comparison','sintactico.py',165),
  ('int_comparison -> LPAREN number comp_op number RPAREN','int_comparison',5,'p_int_comparison','sintactico.py',166),
  ('string_comparison -> boolean','string_comparison',1,'p_string_comparison','sintactico.py',171),
  ('string_comparison -> string comp_op string','string_comparison',3,'p_string_comparison','sintactico.py',172),
  ('string_comparison -> LPAREN string comp_op string RPAREN','string_comparison',5,'p_string_comparison','sintactico.py',173),
  ('logic -> comparison','logic',1,'p_logic','sintactico.py',176),
  ('logic -> logic logic_op logic','logic',3,'p_logic','sintactico.py',177),
  ('logic -> LPAREN logic logic_op logic RPAREN','logic',5,'p_logic','sintactico.py',178),
  ('logic -> LOGICAL_NOT logic','logic',2,'p_logic','sintactico.py',179),
  ('logic_op -> LOGICAL_AND','logic_op',1,'p_logic_op','sintactico.py',183),
  ('logic_op -> LOGICAL_OR','logic_op',1,'p_logic_op','sintactico.py',184),
  ('arith_op -> PLUS','arith_op',1,'p_arith_op','sintactico.py',188),
  ('arith_op -> MINUS','arith_op',1,'p_arith_op','sintactico.py',189),
  ('arith_op -> TIMES','arith_op',1,'p_arith_op','sintactico.py',190),
  ('comp_op -> EQUAL','comp_op',1,'p_comp_op','sintactico.py',195),
  ('comp_op -> NOT_EQUAL','comp_op',1,'p_comp_op','sintactico.py',196),
  ('comp_op -> LESS','comp_op',1,'p_comp_op','sintactico.py',197),
  ('comp_op -> LESS_EQUAL','comp_op',1,'p_comp_op','sintactico.py',198),
  ('comp_op -> GREATER','comp_op',1,'p_comp_op','sintactico.py',199),
  ('comp_op -> GREATER_EQUAL','comp_op',1,'p_comp_op','sintactico.py',200),
  ('values -> value','values',1,'p_values','sintactico.py',205),
  ('values -> value COMMA values','values',3,'p_values','sintactico.py',206),
  ('value -> IDENTIFIER','value',1,'p_value','sintactico.py',210),
  ('value -> number','value',1,'p_value','sintactico.py',211),
  ('value -> string','value',1,'p_value','sintactico.py',212),
  ('value -> list','value',1,'p_value','sintactico.py',213),
  ('number -> INTEGER','number',1,'p_number','sintactico.py',217),
  ('number -> DOUBLE','number',1,'p_number','sintactico.py',218),
  ('string -> STRING','string',1,'p_string','sintactico.py',222),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',226),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',227),
  ('list -> LSQUARE RSQUARE','list',2,'p_list','sintactico.py',231),
  ('list -> LSQUARE values RSQUARE','list',3,'p_list','sintactico.py',232),
  ('list_assigment -> LIST_TYPE IDENTIFIER ASSIGN list SEMICOLON','list_assigment',5,'p_list_assigment','sintactico.py',235),
  ('list_assigment -> LIST_TYPE LESS type GREATER IDENTIFIER ASSIGN list SEMICOLON','list_assigment',8,'p_list_assigment','sintactico.py',236),
  ('function -> type IDENTIFIER LPAREN parameters RPAREN LBRACE lines RBRACE','function',8,'p_function','sintactico.py',241),
  ('lines -> line LINE_BREAK lines','lines',3,'p_lines','sintactico.py',245),
  ('lines -> line lines','lines',2,'p_lines','sintactico.py',246),
  ('lines -> line','lines',1,'p_lines','sintactico.py',247),
  ('lines -> LINE_BREAK','lines',1,'p_lines','sintactico.py',248),
  ('lines -> <empty>','lines',0,'p_lines','sintactico.py',249),
  ('line -> print','line',1,'p_line','sintactico.py',254),
  ('line -> assignment','line',1,'p_line','sintactico.py',255),
  ('line -> function','line',1,'p_line','sintactico.py',256),
  ('line -> if_statement','line',1,'p_line','sintactico.py',257),
  ('line -> while_statement','line',1,'p_line','sintactico.py',258),
  ('line -> for_statement','line',1,'p_line','sintactico.py',259),
  ('line -> function_call','line',1,'p_line','sintactico.py',260),
  ('line -> reassignment','line',1,'p_line','sintactico.py',261),
  ('parameters -> VOID','parameters',1,'p_parameters','sintactico.py',267),
  ('parameters -> parameter','parameters',1,'p_parameters','sintactico.py',268),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','sintactico.py',269),
  ('parameters -> <empty>','parameters',0,'p_parameters','sintactico.py',270),
  ('parameter -> type IDENTIFIER','parameter',2,'p_parameter','sintactico.py',275),
  ('parameter -> IDENTIFIER','parameter',1,'p_parameter','sintactico.py',276),
  ('map -> MAP_TYPE','map',1,'p_map','sintactico.py',280),
  ('map -> MAP_TYPE LESS type COMMA type GREATER','map',6,'p_map','sintactico.py',281),
  ('map_assignment -> MAP_TYPE IDENTIFIER ASSIGN LBRACE RBRACE SEMICOLON','map_assignment',6,'p_map_assignment','sintactico.py',285),
  ('map_assignment -> MAP_TYPE LESS type COMMA type GREATER IDENTIFIER ASSIGN LBRACE values_map RBRACE SEMICOLON','map_assignment',12,'p_map_assignment','sintactico.py',286),
  ('map_assignment -> MAP_TYPE LESS type COMMA type GREATER IDENTIFIER ASSIGN LBRACE RBRACE SEMICOLON','map_assignment',11,'p_map_assignment','sintactico.py',287),
  ('values_map -> value COLON value','values_map',3,'p_values_map','sintactico.py',291),
  ('values_map -> value COLON value COMMA values_map','values_map',5,'p_values_map','sintactico.py',292),
  ('set -> SET_TYPE LESS type GREATER','set',4,'p_set','sintactico.py',297),
  ('set -> SET_TYPE LESS type GREATER LSQUARE values RSQUARE','set',7,'p_set','sintactico.py',298),
  ('set -> SET_TYPE LESS type GREATER LSQUARE RSQUARE','set',6,'p_set','sintactico.py',299),
  ('queue -> QUEUE_TYPE LESS type GREATER','queue',4,'p_queue','sintactico.py',303),
  ('queue -> QUEUE_TYPE LESS type GREATER LSQUARE values RSQUARE','queue',7,'p_queue','sintactico.py',304),
  ('queue -> QUEUE_TYPE LESS type GREATER LSQUARE RSQUARE','queue',6,'p_queue','sintactico.py',305),
  ('while_statement -> WHILE LPAREN logic RPAREN LBRACE lines RBRACE','while_statement',7,'p_while_statement','sintactico.py',309),
  ('for_statement -> FOR LPAREN assignment logic SEMICOLON reassignment RPAREN LBRACE lines RBRACE','for_statement',10,'p_for_statement','sintactico.py',315),
]
