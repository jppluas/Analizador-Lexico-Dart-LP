
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AS ASSERT ASSIGN ASYNC AWAIT BLOCKCOMMENT BOOLEAN_TYPE BREAK CASE CATCH COLON COMMA COMMENT CONST CONTINUE DEFAULT DEFERRED DIVIDE DO DOT DOUBLE DOUBLE_TYPE DYNAMIC_TYPE ELSE ENUM ENUM_TYPE EQUAL EXPORT EXTENDS EXTENSION EXTERNAL FALSE FINAL FINALLY FOR GET GREATER GREATER_EQUAL HIDE IDENTIFIER IF IMPLEMENTS IMPORT IN INLINE_ARITH INTEGER INTEGER_TYPE INTERFACE IS KEYWORD LATE LBRACE LESS LESS_EQUAL LIBRARY LINE_BREAK LIST_TYPE LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSQUARE MAP_TYPE MINUS NOT_EQUAL NULL ON OPERATOR PART PLUS PRINT QUESTION_MARK QUEUE_TYPE RBRACE RETHROW RETURN RPAREN RSQUARE SEMICOLON SET SET_TYPE SHOW STATIC STRING STRING_TYPE SUPER SWITCH SYNC THROW TIMES TRUE TRY TYPEDEF VAR VOID WHILE WITH YIELD\n    statement : expression\n              | assignment\n              | print\n              | function\n              | if_statement\n              | while_statement\n              | for_statement\n              | lines\n              | LBRACE lines RBRACE\n              | reassignment\n              | \n      assignment : modifier type nullable IDENTIFIER ASSIGN expression SEMICOLON\n                    | type nullable IDENTIFIER ASSIGN expression SEMICOLON\n                    | modifier type IDENTIFIER ASSIGN expression SEMICOLON\n                    | type IDENTIFIER ASSIGN expression SEMICOLON\n                    | type IDENTIFIER ASSIGN expression\n    \n        reassignment : IDENTIFIER ASSIGN expression SEMICOLON\n                     | IDENTIFIER INLINE_ARITH number SEMICOLON\n                     | IDENTIFIER INLINE_ARITH SEMICOLON\n                     | IDENTIFIER INLINE_ARITH number\n                     | IDENTIFIER INLINE_ARITH\n     nullable : QUESTION_MARK\n     modifier : LATE\n                | FINAL\n                | CONST\n      print : PRINT LPAREN expression RPAREN SEMICOLON\n                | PRINT LPAREN RPAREN SEMICOLON\n    \n    if_statement : IF LPAREN logic RPAREN LBRACE lines RBRACE\n                 | if_statement ELSE if_statement\n                 | if_statement ELSE LBRACE lines RBRACE\n    \n    function_call : IDENTIFIER LPAREN values RPAREN SEMICOLON\n                    | IDENTIFIER LPAREN values RPAREN\n                    | IDENTIFIER LPAREN RPAREN SEMICOLON\n                    | IDENTIFIER LPAREN RPAREN\n     type : INTEGER_TYPE\n            | DOUBLE_TYPE\n            | BOOLEAN_TYPE\n            | QUEUE_TYPE\n            | STRING_TYPE\n            | ENUM_TYPE\n            | VAR\n            | LIST_TYPE\n            | MAP_TYPE\n            | SET_TYPE\n            | DYNAMIC_TYPE\n            | VOID\n\n      expression : arithmetic\n                    | logic\n                    | function_call\n     arithmetic : value\n        |   arithmetic arith_op arithmetic\n        |   LPAREN arithmetic arith_op arithmetic RPAREN\n     comparison : value\n        |   boolean\n        |   comparison comp_op comparison\n        |   LPAREN comparison comp_op comparison RPAREN\n     logic : comparison\n        |   logic logic_op logic\n        |   LPAREN logic logic_op logic RPAREN\n        |   LOGICAL_NOT logic\n     logic_op : LOGICAL_AND\n        |   LOGICAL_OR\n     arith_op : PLUS\n        |   MINUS\n        |   TIMES\n        |   DIVIDE\n    \n      comp_op : EQUAL\n                 | NOT_EQUAL\n                 | LESS\n                 | LESS_EQUAL\n                 | GREATER\n                 | GREATER_EQUAL\n       values : value\n             | value COMMA values\n value : IDENTIFIER\n         | number\n         | string\n         | list\n  number : INTEGER \n                | DOUBLE\n      string : STRING\n     boolean : TRUE\n                | FALSE\n     list : LSQUARE RSQUARE\n            | LSQUARE values RSQUARE\n    \n    \n    function : type IDENTIFIER LPAREN parameters RPAREN LBRACE lines RBRACE\n     lines : line LINE_BREAK lines\n            | line lines\n            | line\n            | LINE_BREAK\n            |\n\n     line : print\n            | assignment\n            | function\n            | if_statement\n            | while_statement\n            | for_statement\n            | function_call\n            | reassignment\n            \n    \n      parameters : VOID\n                 | parameter\n                 | parameter COMMA parameters\n                 |\n      \n  parameter : type IDENTIFIER\n            | IDENTIFIER \n  \n    map : MAP_TYPE LESS type COMMA type GREATER\n        | MAP_TYPE LESS type COMMA type GREATER LSQUARE values RSQUARE\n        | MAP_TYPE LESS type COMMA type GREATER LSQUARE RSQUARE\n    \n    set : SET_TYPE LESS type GREATER\n        | SET_TYPE LESS type GREATER LSQUARE values RSQUARE\n        | SET_TYPE LESS type GREATER LSQUARE RSQUARE\n    \n    queue : QUEUE_TYPE LESS type GREATER\n          | QUEUE_TYPE LESS type GREATER LSQUARE values RSQUARE\n          | QUEUE_TYPE LESS type GREATER LSQUARE RSQUARE\n    \n    while_statement : WHILE LPAREN logic RPAREN LBRACE lines RBRACE\n    \n    for_statement : FOR LPAREN assignment logic SEMICOLON reassignment RPAREN LBRACE lines RBRACE\n    '
    
_lr_action_items = {'LBRACE':([0,53,154,155,166,189,],[10,103,173,174,179,191,]),'$end':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,17,23,24,25,26,27,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,87,88,96,98,99,102,104,105,106,108,114,116,117,118,120,130,131,133,139,145,146,147,148,150,160,164,168,169,170,171,172,177,178,185,187,188,190,193,],[-11,0,-1,-2,-3,-4,-5,-6,-7,-8,-10,-47,-48,-49,-75,-89,-90,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,-90,-88,-60,-53,-84,-29,-9,-51,-50,-58,-75,-49,-20,-19,-34,-87,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,-14,-13,-12,-28,-115,-86,-116,]),'PRINT':([0,3,4,5,6,7,8,10,11,12,13,14,23,25,26,27,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,87,96,98,99,102,103,105,106,108,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[18,-93,-92,-94,-95,-96,-97,18,-99,-47,-48,-98,18,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,18,-60,-53,-84,-29,18,-51,-50,-58,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,18,18,-14,-13,18,-12,-28,-115,-86,18,-116,]),'IF':([0,3,4,5,6,7,8,10,11,12,13,14,23,25,26,27,44,45,46,47,48,49,51,52,53,55,56,57,58,59,60,61,62,77,83,87,96,98,99,102,103,105,106,108,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[20,-93,-92,-94,-95,-96,-97,20,-99,-47,-48,-98,20,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,20,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,20,-60,-53,-84,-29,20,-51,-50,-58,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,20,20,-14,-13,20,-12,-28,-115,-86,20,-116,]),'WHILE':([0,3,4,5,6,7,8,10,11,12,13,14,23,25,26,27,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,87,96,98,99,102,103,105,106,108,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[21,-93,-92,-94,-95,-96,-97,21,-99,-47,-48,-98,21,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,21,-60,-53,-84,-29,21,-51,-50,-58,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,21,21,-14,-13,21,-12,-28,-115,-86,21,-116,]),'FOR':([0,3,4,5,6,7,8,10,11,12,13,14,23,25,26,27,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,87,96,98,99,102,103,105,106,108,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[22,-93,-92,-94,-95,-96,-97,22,-99,-47,-48,-98,22,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,22,-60,-53,-84,-29,22,-51,-50,-58,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,22,22,-14,-13,22,-12,-28,-115,-86,22,-116,]),'LINE_BREAK':([0,3,4,5,6,7,8,10,11,12,13,14,23,25,26,27,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,87,96,98,99,102,103,105,106,108,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[24,-93,-92,-94,-95,-96,-97,24,-99,-47,-48,-98,87,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,24,-60,-53,-84,-29,24,-51,-50,-58,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,24,24,-14,-13,24,-12,-28,-115,-86,24,-116,]),'IDENTIFIER':([0,3,4,5,6,7,8,10,11,12,13,14,16,19,23,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,102,103,105,106,107,108,109,112,113,114,116,117,118,120,123,124,125,128,129,131,132,133,134,137,138,139,140,143,145,146,147,148,150,160,161,164,167,168,169,170,171,172,173,174,175,177,178,179,185,187,188,190,191,193,],[17,-93,-92,-94,-95,-96,-97,63,-99,-47,-48,-98,74,83,63,-76,-50,-57,83,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-77,-78,-54,-79,-80,-81,83,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,83,-63,-64,-65,-66,83,-61,-62,110,111,-22,114,-21,83,114,-75,83,83,63,83,-67,-68,-69,-70,-71,-72,-60,83,-53,-84,-29,63,-51,-50,83,-58,136,114,141,-75,-49,-20,-19,-34,83,83,83,83,157,-55,83,-85,83,114,114,-16,165,-46,-17,-18,-32,-33,-27,-30,114,-15,141,-31,-26,-52,-59,-56,63,63,184,-14,-13,63,-12,-28,-115,-86,63,-116,]),'LPAREN':([0,12,13,17,18,19,20,21,22,25,26,27,28,44,45,46,47,48,49,51,52,63,64,65,66,67,68,69,70,71,74,76,79,83,84,85,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,112,114,116,120,123,124,125,128,131,132,133,137,138,139,147,148,161,164,168,170,171,172,177,178,185,],[19,-47,-48,78,79,19,84,85,86,-76,-50,-57,97,-77,-78,-54,-79,-80,-81,-82,-83,78,107,-63,-64,-65,-66,97,-61,-62,113,19,19,-75,97,97,132,-67,-68,-69,-70,-71,-72,-60,97,-53,-84,-51,-50,107,-58,19,78,-49,-34,107,97,132,97,-55,132,-85,19,19,-16,-32,-33,19,-15,-31,-52,-59,-56,-14,-13,-12,]),'LOGICAL_NOT':([0,12,13,19,25,26,27,28,44,45,46,47,48,49,51,52,69,70,71,76,79,83,84,85,96,97,98,99,105,106,108,112,114,116,120,124,128,131,133,137,138,139,147,148,161,164,168,170,171,172,177,178,185,],[28,-47,-48,28,-76,-50,-57,28,-77,-78,-54,-79,-80,-81,-82,-83,28,-61,-62,28,28,-75,28,28,-60,28,-53,-84,-51,-50,-58,28,-75,-49,-34,28,28,-55,-85,28,28,-16,-32,-33,28,-15,-31,-52,-59,-56,-14,-13,-12,]),'LATE':([0,3,4,5,6,7,8,10,11,12,13,14,23,25,26,27,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[29,-93,-92,-94,-95,-96,-97,29,-99,-47,-48,-98,29,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,29,29,-60,-53,-84,-29,29,-51,-50,-58,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,29,29,-14,-13,29,-12,-28,-115,-86,29,-116,]),'FINAL':([0,3,4,5,6,7,8,10,11,12,13,14,23,25,26,27,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[30,-93,-92,-94,-95,-96,-97,30,-99,-47,-48,-98,30,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,30,30,-60,-53,-84,-29,30,-51,-50,-58,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,30,30,-14,-13,30,-12,-28,-115,-86,30,-116,]),'CONST':([0,3,4,5,6,7,8,10,11,12,13,14,23,25,26,27,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[31,-93,-92,-94,-95,-96,-97,31,-99,-47,-48,-98,31,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,31,31,-60,-53,-84,-29,31,-51,-50,-58,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,31,31,-14,-13,31,-12,-28,-115,-86,31,-116,]),'INTEGER_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[32,-93,-92,-94,-95,-96,-97,32,-99,-47,-48,-98,32,32,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,32,32,-60,-53,-84,-29,32,-51,-50,-58,32,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,32,-31,-26,-52,-59,-56,32,32,-14,-13,32,-12,-28,-115,-86,32,-116,]),'DOUBLE_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[33,-93,-92,-94,-95,-96,-97,33,-99,-47,-48,-98,33,33,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,33,33,-60,-53,-84,-29,33,-51,-50,-58,33,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,33,-31,-26,-52,-59,-56,33,33,-14,-13,33,-12,-28,-115,-86,33,-116,]),'BOOLEAN_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[34,-93,-92,-94,-95,-96,-97,34,-99,-47,-48,-98,34,34,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,34,34,-60,-53,-84,-29,34,-51,-50,-58,34,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,34,-31,-26,-52,-59,-56,34,34,-14,-13,34,-12,-28,-115,-86,34,-116,]),'QUEUE_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[35,-93,-92,-94,-95,-96,-97,35,-99,-47,-48,-98,35,35,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,35,35,-60,-53,-84,-29,35,-51,-50,-58,35,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,35,-31,-26,-52,-59,-56,35,35,-14,-13,35,-12,-28,-115,-86,35,-116,]),'STRING_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[36,-93,-92,-94,-95,-96,-97,36,-99,-47,-48,-98,36,36,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,36,36,-60,-53,-84,-29,36,-51,-50,-58,36,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,36,-31,-26,-52,-59,-56,36,36,-14,-13,36,-12,-28,-115,-86,36,-116,]),'ENUM_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[37,-93,-92,-94,-95,-96,-97,37,-99,-47,-48,-98,37,37,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,37,37,-60,-53,-84,-29,37,-51,-50,-58,37,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,37,-31,-26,-52,-59,-56,37,37,-14,-13,37,-12,-28,-115,-86,37,-116,]),'VAR':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[38,-93,-92,-94,-95,-96,-97,38,-99,-47,-48,-98,38,38,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,38,38,-60,-53,-84,-29,38,-51,-50,-58,38,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,38,-31,-26,-52,-59,-56,38,38,-14,-13,38,-12,-28,-115,-86,38,-116,]),'LIST_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[39,-93,-92,-94,-95,-96,-97,39,-99,-47,-48,-98,39,39,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,39,39,-60,-53,-84,-29,39,-51,-50,-58,39,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,39,-31,-26,-52,-59,-56,39,39,-14,-13,39,-12,-28,-115,-86,39,-116,]),'MAP_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[40,-93,-92,-94,-95,-96,-97,40,-99,-47,-48,-98,40,40,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,40,40,-60,-53,-84,-29,40,-51,-50,-58,40,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,40,-31,-26,-52,-59,-56,40,40,-14,-13,40,-12,-28,-115,-86,40,-116,]),'SET_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[41,-93,-92,-94,-95,-96,-97,41,-99,-47,-48,-98,41,41,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,41,41,-60,-53,-84,-29,41,-51,-50,-58,41,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,41,-31,-26,-52,-59,-56,41,41,-14,-13,41,-12,-28,-115,-86,41,-116,]),'DYNAMIC_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[42,-93,-92,-94,-95,-96,-97,42,-99,-47,-48,-98,42,42,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,42,42,-60,-53,-84,-29,42,-51,-50,-58,42,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,42,-31,-26,-52,-59,-56,42,42,-14,-13,42,-12,-28,-115,-86,42,-116,]),'VOID':([0,3,4,5,6,7,8,10,11,12,13,14,15,23,25,26,27,29,30,31,44,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,77,83,86,87,96,98,99,102,103,105,106,108,113,114,116,117,118,120,131,133,139,145,146,147,148,150,160,164,167,168,169,170,171,172,173,174,177,178,179,185,187,188,190,191,193,],[43,-93,-92,-94,-95,-96,-97,43,-99,-47,-48,-98,43,43,-76,-50,-57,-23,-24,-25,-77,-78,-54,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,43,43,-60,-53,-84,-29,43,-51,-50,-58,143,-75,-49,-20,-19,-34,-55,-85,-16,-17,-18,-32,-33,-27,-30,-15,143,-31,-26,-52,-59,-56,43,43,-14,-13,43,-12,-28,-115,-86,43,-116,]),'INTEGER':([0,12,13,19,25,26,27,28,44,45,46,47,48,49,50,51,52,64,65,66,67,68,69,70,71,76,77,78,79,83,84,85,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,112,114,116,120,123,124,125,128,131,132,133,134,137,138,139,147,148,161,164,168,170,171,172,177,178,185,],[47,-47,-48,47,-76,-50,-57,47,-77,-78,-54,-79,-80,-81,47,-82,-83,47,-63,-64,-65,-66,47,-61,-62,47,47,47,47,-75,47,47,47,-67,-68,-69,-70,-71,-72,-60,47,-53,-84,-51,-50,47,-58,47,-75,-49,-34,47,47,47,47,-55,47,-85,47,47,47,-16,-32,-33,47,-15,-31,-52,-59,-56,-14,-13,-12,]),'DOUBLE':([0,12,13,19,25,26,27,28,44,45,46,47,48,49,50,51,52,64,65,66,67,68,69,70,71,76,77,78,79,83,84,85,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,112,114,116,120,123,124,125,128,131,132,133,134,137,138,139,147,148,161,164,168,170,171,172,177,178,185,],[48,-47,-48,48,-76,-50,-57,48,-77,-78,-54,-79,-80,-81,48,-82,-83,48,-63,-64,-65,-66,48,-61,-62,48,48,48,48,-75,48,48,48,-67,-68,-69,-70,-71,-72,-60,48,-53,-84,-51,-50,48,-58,48,-75,-49,-34,48,48,48,48,-55,48,-85,48,48,48,-16,-32,-33,48,-15,-31,-52,-59,-56,-14,-13,-12,]),'STRING':([0,12,13,19,25,26,27,28,44,45,46,47,48,49,50,51,52,64,65,66,67,68,69,70,71,76,78,79,83,84,85,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,112,114,116,120,123,124,125,128,131,132,133,134,137,138,139,147,148,161,164,168,170,171,172,177,178,185,],[49,-47,-48,49,-76,-50,-57,49,-77,-78,-54,-79,-80,-81,49,-82,-83,49,-63,-64,-65,-66,49,-61,-62,49,49,49,-75,49,49,49,-67,-68,-69,-70,-71,-72,-60,49,-53,-84,-51,-50,49,-58,49,-75,-49,-34,49,49,49,49,-55,49,-85,49,49,49,-16,-32,-33,49,-15,-31,-52,-59,-56,-14,-13,-12,]),'LSQUARE':([0,12,13,19,25,26,27,28,44,45,46,47,48,49,50,51,52,64,65,66,67,68,69,70,71,76,78,79,83,84,85,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,112,114,116,120,123,124,125,128,131,132,133,134,137,138,139,147,148,161,164,168,170,171,172,177,178,185,],[50,-47,-48,50,-76,-50,-57,50,-77,-78,-54,-79,-80,-81,50,-82,-83,50,-63,-64,-65,-66,50,-61,-62,50,50,50,-75,50,50,50,-67,-68,-69,-70,-71,-72,-60,50,-53,-84,-51,-50,50,-58,50,-75,-49,-34,50,50,50,50,-55,50,-85,50,50,50,-16,-32,-33,50,-15,-31,-52,-59,-56,-14,-13,-12,]),'TRUE':([0,12,13,19,25,26,27,28,44,45,46,47,48,49,51,52,69,70,71,76,79,83,84,85,89,90,91,92,93,94,95,96,97,98,99,105,106,108,112,114,116,120,124,125,128,131,132,133,137,138,139,147,148,161,164,168,170,171,172,177,178,185,],[51,-47,-48,51,-76,-50,-57,51,-77,-78,-54,-79,-80,-81,-82,-83,51,-61,-62,51,51,-75,51,51,51,-67,-68,-69,-70,-71,-72,-60,51,-53,-84,-51,-50,-58,51,-75,-49,-34,51,51,51,-55,51,-85,51,51,-16,-32,-33,51,-15,-31,-52,-59,-56,-14,-13,-12,]),'FALSE':([0,12,13,19,25,26,27,28,44,45,46,47,48,49,51,52,69,70,71,76,79,83,84,85,89,90,91,92,93,94,95,96,97,98,99,105,106,108,112,114,116,120,124,125,128,131,132,133,137,138,139,147,148,161,164,168,170,171,172,177,178,185,],[52,-47,-48,52,-76,-50,-57,52,-77,-78,-54,-79,-80,-81,-82,-83,52,-61,-62,52,52,-75,52,52,52,-67,-68,-69,-70,-71,-72,-60,52,-53,-84,-51,-50,-58,52,-75,-49,-34,52,52,52,-55,52,-85,52,52,-16,-32,-33,52,-15,-31,-52,-59,-56,-14,-13,-12,]),'ELSE':([6,58,102,160,187,],[53,53,53,-30,-28,]),'RBRACE':([10,12,13,23,24,25,26,27,44,45,46,47,48,49,51,52,54,55,56,57,58,59,60,61,62,77,83,87,88,96,98,99,102,103,105,106,108,114,116,117,118,120,130,131,133,135,139,145,146,147,148,150,160,164,168,169,170,171,172,173,174,177,178,179,181,182,185,186,187,188,190,191,192,193,],[-91,-47,-48,-89,-90,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,104,-92,-93,-94,-95,-96,-97,-98,-99,-21,-75,-90,-88,-60,-53,-84,-29,-91,-51,-50,-58,-75,-49,-20,-19,-34,-87,-55,-85,160,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-52,-59,-56,-91,-91,-14,-13,-91,187,188,-12,190,-28,-115,-86,-91,193,-116,]),'SEMICOLON':([12,13,25,26,27,44,45,46,47,48,49,51,52,77,83,96,98,99,105,106,108,114,115,116,117,120,122,131,133,139,147,148,149,156,162,163,168,170,171,172,176,],[-47,-48,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,118,-75,-60,-53,-84,-51,-50,-58,-75,145,-49,146,148,150,-55,-85,164,168,-33,169,175,177,178,-31,-52,-59,-56,185,]),'RPAREN':([12,13,25,26,27,44,45,46,47,48,49,51,52,77,78,79,83,96,98,99,101,105,106,108,113,114,116,117,118,119,120,121,126,127,131,133,141,142,143,144,145,146,147,148,151,152,153,159,165,167,168,170,171,172,180,183,],[-47,-48,-76,-50,-57,-77,-78,-54,-79,-80,-81,-82,-83,-21,120,122,-75,-60,-53,-84,-73,-51,-50,-58,-103,-75,-49,-20,-19,147,-34,149,154,155,-55,-85,-105,166,-100,-101,-17,-18,-32,-33,170,171,172,-74,-104,-103,-31,-52,-59,-56,-102,189,]),'PLUS':([12,17,25,26,44,45,47,48,49,80,83,99,105,106,114,133,151,170,],[65,-75,-76,-50,-77,-78,-79,-80,-81,65,-75,-84,65,-50,-75,-85,65,-52,]),'MINUS':([12,17,25,26,44,45,47,48,49,80,83,99,105,106,114,133,151,170,],[66,-75,-76,-50,-77,-78,-79,-80,-81,66,-75,-84,66,-50,-75,-85,66,-52,]),'TIMES':([12,17,25,26,44,45,47,48,49,80,83,99,105,106,114,133,151,170,],[67,-75,-76,-50,-77,-78,-79,-80,-81,67,-75,-84,67,-50,-75,-85,67,-52,]),'DIVIDE':([12,17,25,26,44,45,47,48,49,80,83,99,105,106,114,133,151,170,],[68,-75,-76,-50,-77,-78,-79,-80,-81,68,-75,-84,68,-50,-75,-85,68,-52,]),'LOGICAL_AND':([13,17,25,26,27,44,45,46,47,48,49,51,52,81,82,83,96,98,99,108,114,126,127,131,133,152,153,156,171,172,],[70,-75,-76,-53,-57,-77,-78,-54,-79,-80,-81,-82,-83,70,-57,-75,70,-53,-84,70,-75,70,70,-55,-85,70,-55,70,-59,-56,]),'LOGICAL_OR':([13,17,25,26,27,44,45,46,47,48,49,51,52,81,82,83,96,98,99,108,114,126,127,131,133,152,153,156,171,172,],[71,-75,-76,-53,-57,-77,-78,-54,-79,-80,-81,-82,-83,71,-57,-75,71,-53,-84,71,-75,71,71,-55,-85,71,-55,71,-59,-56,]),'QUESTION_MARK':([16,32,33,34,35,36,37,38,39,40,41,42,43,72,129,],[75,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,75,75,]),'ASSIGN':([17,63,74,110,111,136,157,184,],[76,76,112,137,138,161,112,76,]),'INLINE_ARITH':([17,63,184,],[77,77,77,]),'EQUAL':([17,25,26,27,44,45,46,47,48,49,51,52,82,83,98,99,114,131,133,153,158,172,],[-75,-76,-53,90,-77,-78,-54,-79,-80,-81,-82,-83,90,-75,-53,-84,-75,90,-85,90,90,-56,]),'NOT_EQUAL':([17,25,26,27,44,45,46,47,48,49,51,52,82,83,98,99,114,131,133,153,158,172,],[-75,-76,-53,91,-77,-78,-54,-79,-80,-81,-82,-83,91,-75,-53,-84,-75,91,-85,91,91,-56,]),'LESS':([17,25,26,27,44,45,46,47,48,49,51,52,82,83,98,99,114,131,133,153,158,172,],[-75,-76,-53,92,-77,-78,-54,-79,-80,-81,-82,-83,92,-75,-53,-84,-75,92,-85,92,92,-56,]),'LESS_EQUAL':([17,25,26,27,44,45,46,47,48,49,51,52,82,83,98,99,114,131,133,153,158,172,],[-75,-76,-53,93,-77,-78,-54,-79,-80,-81,-82,-83,93,-75,-53,-84,-75,93,-85,93,93,-56,]),'GREATER':([17,25,26,27,44,45,46,47,48,49,51,52,82,83,98,99,114,131,133,153,158,172,],[-75,-76,-53,94,-77,-78,-54,-79,-80,-81,-82,-83,94,-75,-53,-84,-75,94,-85,94,94,-56,]),'GREATER_EQUAL':([17,25,26,27,44,45,46,47,48,49,51,52,82,83,98,99,114,131,133,153,158,172,],[-75,-76,-53,95,-77,-78,-54,-79,-80,-81,-82,-83,95,-75,-53,-84,-75,95,-85,95,95,-56,]),'COMMA':([25,44,45,47,48,49,83,99,101,133,141,144,165,],[-76,-77,-78,-79,-80,-81,-75,-84,134,-85,-105,167,-104,]),'RSQUARE':([25,44,45,47,48,49,50,83,99,100,101,133,159,],[-76,-77,-78,-79,-80,-81,99,-75,-84,133,-73,-85,-74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,76,79,112,137,138,161,],[2,115,121,139,162,163,176,]),'assignment':([0,10,23,86,87,103,173,174,179,191,],[3,56,56,128,56,56,56,56,56,56,]),'print':([0,10,23,87,103,173,174,179,191,],[4,55,55,55,55,55,55,55,55,]),'function':([0,10,23,87,103,173,174,179,191,],[5,57,57,57,57,57,57,57,57,]),'if_statement':([0,10,23,53,87,103,173,174,179,191,],[6,58,58,102,58,58,58,58,58,58,]),'while_statement':([0,10,23,87,103,173,174,179,191,],[7,59,59,59,59,59,59,59,59,]),'for_statement':([0,10,23,87,103,173,174,179,191,],[8,60,60,60,60,60,60,60,60,]),'lines':([0,10,23,87,103,173,174,179,191,],[9,54,88,130,135,181,182,186,192,]),'reassignment':([0,10,23,87,103,173,174,175,179,191,],[11,62,62,62,62,62,62,183,62,62,]),'arithmetic':([0,19,64,76,79,107,112,123,137,138,161,],[12,80,105,12,12,80,12,151,12,12,12,]),'logic':([0,19,28,69,76,79,84,85,97,112,124,128,137,138,161,],[13,81,96,108,13,13,126,127,81,13,152,156,13,13,13,]),'function_call':([0,10,23,76,79,87,103,112,137,138,161,173,174,179,191,],[14,61,61,116,116,61,61,116,116,116,116,61,61,61,61,]),'modifier':([0,10,23,86,87,103,173,174,179,191,],[15,15,15,15,15,15,15,15,15,15,]),'type':([0,10,15,23,86,87,103,113,167,173,174,179,191,],[16,16,72,16,129,16,16,140,140,16,16,16,16,]),'line':([0,10,23,87,103,173,174,179,191,],[23,23,23,23,23,23,23,23,23,]),'number':([0,19,28,50,64,69,76,77,78,79,84,85,89,97,107,112,123,124,125,128,132,134,137,138,161,],[25,25,25,25,25,25,25,117,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'value':([0,19,28,50,64,69,76,78,79,84,85,89,97,107,112,123,124,125,128,132,134,137,138,161,],[26,26,98,101,106,98,26,101,26,98,98,98,98,106,26,106,98,98,98,98,101,26,26,26,]),'comparison':([0,19,28,69,76,79,84,85,89,97,112,124,125,128,132,137,138,161,],[27,82,27,27,27,27,27,27,131,82,27,27,153,27,158,27,27,27,]),'string':([0,19,28,50,64,69,76,78,79,84,85,89,97,107,112,123,124,125,128,132,134,137,138,161,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'list':([0,19,28,50,64,69,76,78,79,84,85,89,97,107,112,123,124,125,128,132,134,137,138,161,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'boolean':([0,19,28,69,76,79,84,85,89,97,112,124,125,128,132,137,138,161,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'arith_op':([12,80,105,151,],[64,123,64,64,]),'logic_op':([13,81,96,108,126,127,152,156,],[69,124,69,69,69,69,69,69,]),'nullable':([16,72,129,],[73,109,73,]),'comp_op':([27,82,131,153,158,],[89,125,89,89,125,]),'values':([50,78,134,],[100,119,159,]),'parameters':([113,167,],[142,180,]),'parameter':([113,167,],[144,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement','sintactico.py',6),
  ('statement -> assignment','statement',1,'p_statement','sintactico.py',7),
  ('statement -> print','statement',1,'p_statement','sintactico.py',8),
  ('statement -> function','statement',1,'p_statement','sintactico.py',9),
  ('statement -> if_statement','statement',1,'p_statement','sintactico.py',10),
  ('statement -> while_statement','statement',1,'p_statement','sintactico.py',11),
  ('statement -> for_statement','statement',1,'p_statement','sintactico.py',12),
  ('statement -> lines','statement',1,'p_statement','sintactico.py',13),
  ('statement -> LBRACE lines RBRACE','statement',3,'p_statement','sintactico.py',14),
  ('statement -> reassignment','statement',1,'p_statement','sintactico.py',15),
  ('statement -> <empty>','statement',0,'p_statement','sintactico.py',16),
  ('assignment -> modifier type nullable IDENTIFIER ASSIGN expression SEMICOLON','assignment',7,'p_assignment','sintactico.py',19),
  ('assignment -> type nullable IDENTIFIER ASSIGN expression SEMICOLON','assignment',6,'p_assignment','sintactico.py',20),
  ('assignment -> modifier type IDENTIFIER ASSIGN expression SEMICOLON','assignment',6,'p_assignment','sintactico.py',21),
  ('assignment -> type IDENTIFIER ASSIGN expression SEMICOLON','assignment',5,'p_assignment','sintactico.py',22),
  ('assignment -> type IDENTIFIER ASSIGN expression','assignment',4,'p_assignment','sintactico.py',23),
  ('reassignment -> IDENTIFIER ASSIGN expression SEMICOLON','reassignment',4,'p_reassignment','sintactico.py',28),
  ('reassignment -> IDENTIFIER INLINE_ARITH number SEMICOLON','reassignment',4,'p_reassignment','sintactico.py',29),
  ('reassignment -> IDENTIFIER INLINE_ARITH SEMICOLON','reassignment',3,'p_reassignment','sintactico.py',30),
  ('reassignment -> IDENTIFIER INLINE_ARITH number','reassignment',3,'p_reassignment','sintactico.py',31),
  ('reassignment -> IDENTIFIER INLINE_ARITH','reassignment',2,'p_reassignment','sintactico.py',32),
  ('nullable -> QUESTION_MARK','nullable',1,'p_nullable','sintactico.py',36),
  ('modifier -> LATE','modifier',1,'p_modifier','sintactico.py',40),
  ('modifier -> FINAL','modifier',1,'p_modifier','sintactico.py',41),
  ('modifier -> CONST','modifier',1,'p_modifier','sintactico.py',42),
  ('print -> PRINT LPAREN expression RPAREN SEMICOLON','print',5,'p_print','sintactico.py',46),
  ('print -> PRINT LPAREN RPAREN SEMICOLON','print',4,'p_print','sintactico.py',47),
  ('if_statement -> IF LPAREN logic RPAREN LBRACE lines RBRACE','if_statement',7,'p_if_statement','sintactico.py',52),
  ('if_statement -> if_statement ELSE if_statement','if_statement',3,'p_if_statement','sintactico.py',53),
  ('if_statement -> if_statement ELSE LBRACE lines RBRACE','if_statement',5,'p_if_statement','sintactico.py',54),
  ('function_call -> IDENTIFIER LPAREN values RPAREN SEMICOLON','function_call',5,'p_function_call','sintactico.py',60),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','sintactico.py',61),
  ('function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON','function_call',4,'p_function_call','sintactico.py',62),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','sintactico.py',63),
  ('type -> INTEGER_TYPE','type',1,'p_type','sintactico.py',67),
  ('type -> DOUBLE_TYPE','type',1,'p_type','sintactico.py',68),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','sintactico.py',69),
  ('type -> QUEUE_TYPE','type',1,'p_type','sintactico.py',70),
  ('type -> STRING_TYPE','type',1,'p_type','sintactico.py',71),
  ('type -> ENUM_TYPE','type',1,'p_type','sintactico.py',72),
  ('type -> VAR','type',1,'p_type','sintactico.py',73),
  ('type -> LIST_TYPE','type',1,'p_type','sintactico.py',74),
  ('type -> MAP_TYPE','type',1,'p_type','sintactico.py',75),
  ('type -> SET_TYPE','type',1,'p_type','sintactico.py',76),
  ('type -> DYNAMIC_TYPE','type',1,'p_type','sintactico.py',77),
  ('type -> VOID','type',1,'p_type','sintactico.py',78),
  ('expression -> arithmetic','expression',1,'p_expression','sintactico.py',83),
  ('expression -> logic','expression',1,'p_expression','sintactico.py',84),
  ('expression -> function_call','expression',1,'p_expression','sintactico.py',85),
  ('arithmetic -> value','arithmetic',1,'p_arithmetic','sintactico.py',89),
  ('arithmetic -> arithmetic arith_op arithmetic','arithmetic',3,'p_arithmetic','sintactico.py',90),
  ('arithmetic -> LPAREN arithmetic arith_op arithmetic RPAREN','arithmetic',5,'p_arithmetic','sintactico.py',91),
  ('comparison -> value','comparison',1,'p_comparison','sintactico.py',95),
  ('comparison -> boolean','comparison',1,'p_comparison','sintactico.py',96),
  ('comparison -> comparison comp_op comparison','comparison',3,'p_comparison','sintactico.py',97),
  ('comparison -> LPAREN comparison comp_op comparison RPAREN','comparison',5,'p_comparison','sintactico.py',98),
  ('logic -> comparison','logic',1,'p_logic','sintactico.py',102),
  ('logic -> logic logic_op logic','logic',3,'p_logic','sintactico.py',103),
  ('logic -> LPAREN logic logic_op logic RPAREN','logic',5,'p_logic','sintactico.py',104),
  ('logic -> LOGICAL_NOT logic','logic',2,'p_logic','sintactico.py',105),
  ('logic_op -> LOGICAL_AND','logic_op',1,'p_logic_op','sintactico.py',109),
  ('logic_op -> LOGICAL_OR','logic_op',1,'p_logic_op','sintactico.py',110),
  ('arith_op -> PLUS','arith_op',1,'p_arith_op','sintactico.py',114),
  ('arith_op -> MINUS','arith_op',1,'p_arith_op','sintactico.py',115),
  ('arith_op -> TIMES','arith_op',1,'p_arith_op','sintactico.py',116),
  ('arith_op -> DIVIDE','arith_op',1,'p_arith_op','sintactico.py',117),
  ('comp_op -> EQUAL','comp_op',1,'p_comp_op','sintactico.py',122),
  ('comp_op -> NOT_EQUAL','comp_op',1,'p_comp_op','sintactico.py',123),
  ('comp_op -> LESS','comp_op',1,'p_comp_op','sintactico.py',124),
  ('comp_op -> LESS_EQUAL','comp_op',1,'p_comp_op','sintactico.py',125),
  ('comp_op -> GREATER','comp_op',1,'p_comp_op','sintactico.py',126),
  ('comp_op -> GREATER_EQUAL','comp_op',1,'p_comp_op','sintactico.py',127),
  ('values -> value','values',1,'p_values','sintactico.py',132),
  ('values -> value COMMA values','values',3,'p_values','sintactico.py',133),
  ('value -> IDENTIFIER','value',1,'p_value','sintactico.py',137),
  ('value -> number','value',1,'p_value','sintactico.py',138),
  ('value -> string','value',1,'p_value','sintactico.py',139),
  ('value -> list','value',1,'p_value','sintactico.py',140),
  ('number -> INTEGER','number',1,'p_number','sintactico.py',144),
  ('number -> DOUBLE','number',1,'p_number','sintactico.py',145),
  ('string -> STRING','string',1,'p_string','sintactico.py',149),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',153),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',154),
  ('list -> LSQUARE RSQUARE','list',2,'p_list','sintactico.py',158),
  ('list -> LSQUARE values RSQUARE','list',3,'p_list','sintactico.py',159),
  ('function -> type IDENTIFIER LPAREN parameters RPAREN LBRACE lines RBRACE','function',8,'p_function','sintactico.py',165),
  ('lines -> line LINE_BREAK lines','lines',3,'p_lines','sintactico.py',169),
  ('lines -> line lines','lines',2,'p_lines','sintactico.py',170),
  ('lines -> line','lines',1,'p_lines','sintactico.py',171),
  ('lines -> LINE_BREAK','lines',1,'p_lines','sintactico.py',172),
  ('lines -> <empty>','lines',0,'p_lines','sintactico.py',173),
  ('line -> print','line',1,'p_line','sintactico.py',178),
  ('line -> assignment','line',1,'p_line','sintactico.py',179),
  ('line -> function','line',1,'p_line','sintactico.py',180),
  ('line -> if_statement','line',1,'p_line','sintactico.py',181),
  ('line -> while_statement','line',1,'p_line','sintactico.py',182),
  ('line -> for_statement','line',1,'p_line','sintactico.py',183),
  ('line -> function_call','line',1,'p_line','sintactico.py',184),
  ('line -> reassignment','line',1,'p_line','sintactico.py',185),
  ('parameters -> VOID','parameters',1,'p_parameters','sintactico.py',191),
  ('parameters -> parameter','parameters',1,'p_parameters','sintactico.py',192),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','sintactico.py',193),
  ('parameters -> <empty>','parameters',0,'p_parameters','sintactico.py',194),
  ('parameter -> type IDENTIFIER','parameter',2,'p_parameter','sintactico.py',199),
  ('parameter -> IDENTIFIER','parameter',1,'p_parameter','sintactico.py',200),
  ('map -> MAP_TYPE LESS type COMMA type GREATER','map',6,'p_map','sintactico.py',204),
  ('map -> MAP_TYPE LESS type COMMA type GREATER LSQUARE values RSQUARE','map',9,'p_map','sintactico.py',205),
  ('map -> MAP_TYPE LESS type COMMA type GREATER LSQUARE RSQUARE','map',8,'p_map','sintactico.py',206),
  ('set -> SET_TYPE LESS type GREATER','set',4,'p_set','sintactico.py',211),
  ('set -> SET_TYPE LESS type GREATER LSQUARE values RSQUARE','set',7,'p_set','sintactico.py',212),
  ('set -> SET_TYPE LESS type GREATER LSQUARE RSQUARE','set',6,'p_set','sintactico.py',213),
  ('queue -> QUEUE_TYPE LESS type GREATER','queue',4,'p_queue','sintactico.py',217),
  ('queue -> QUEUE_TYPE LESS type GREATER LSQUARE values RSQUARE','queue',7,'p_queue','sintactico.py',218),
  ('queue -> QUEUE_TYPE LESS type GREATER LSQUARE RSQUARE','queue',6,'p_queue','sintactico.py',219),
  ('while_statement -> WHILE LPAREN logic RPAREN LBRACE lines RBRACE','while_statement',7,'p_while_statement','sintactico.py',223),
  ('for_statement -> FOR LPAREN assignment logic SEMICOLON reassignment RPAREN LBRACE lines RBRACE','for_statement',10,'p_for_statement','sintactico.py',229),
]
