
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ASSIGN BLOCKCOMMENT BOOLEAN_TYPE BREAK CASE CATCH COLON COMMA COMMENT CONST CONTINUE DEFAULT DIVIDE DO DOT DOUBLE DOUBLE_TYPE DYNAMIC_TYPE ELSE ENUM ENUM_TYPE EQUAL EXTENDS FALSE FINAL FINALLY FOR GET GREATER GREATER_EQUAL IDENTIFIER IF IMPLEMENTS IN INLINE_ARITH INTEGER INTEGER_TYPE LATE LBRACE LESS LESS_EQUAL LINE_BREAK LIST_TYPE LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSQUARE MAP_TYPE MINUS NOT_EQUAL NULL PLUS PRINT QUESTION_MARK QUEUE_TYPE RBRACE RETURN RPAREN RSQUARE SEMICOLON SET SET_TYPE STRING STRING_TYPE SWITCH THROW TIMES TRUE TRY TYPEDEF VAR VOID WHILE ZERO\n    statement : expression\n              | assignment\n              | print\n              | function\n              | if_statement\n              | while_statement\n              | for_statement\n              | lines\n              | LBRACE lines RBRACE\n              | reassignment\n              | \n      assignment : modifier type nullable IDENTIFIER ASSIGN expression SEMICOLON\n                    | type nullable IDENTIFIER ASSIGN expression SEMICOLON\n                    | modifier type IDENTIFIER ASSIGN expression SEMICOLON\n                    | type IDENTIFIER ASSIGN expression SEMICOLON\n                    | type IDENTIFIER ASSIGN expression\n    \n        reassignment : IDENTIFIER ASSIGN expression SEMICOLON\n                     | IDENTIFIER INLINE_ARITH number SEMICOLON\n                     | IDENTIFIER INLINE_ARITH SEMICOLON\n                     | IDENTIFIER INLINE_ARITH number\n                     | IDENTIFIER INLINE_ARITH\n     nullable : QUESTION_MARK\n     modifier : LATE\n                | FINAL\n                | CONST\n      print : PRINT LPAREN expression RPAREN SEMICOLON\n                | PRINT LPAREN RPAREN SEMICOLON\n    \n    if_statement : IF LPAREN logic RPAREN LBRACE lines RBRACE\n                 | if_statement ELSE if_statement\n                 | if_statement ELSE LBRACE lines RBRACE\n    \n    function_call : IDENTIFIER LPAREN values RPAREN SEMICOLON\n                    | IDENTIFIER LPAREN values RPAREN\n                    | IDENTIFIER LPAREN RPAREN SEMICOLON\n                    | IDENTIFIER LPAREN RPAREN\n     type : INTEGER_TYPE\n            | DOUBLE_TYPE\n            | BOOLEAN_TYPE\n            | QUEUE_TYPE\n            | STRING_TYPE\n            | ENUM_TYPE\n            | VAR\n            | LIST_TYPE\n            | MAP_TYPE\n            | SET_TYPE\n            | DYNAMIC_TYPE\n            | VOID\n\n      expression : arithmetic\n                    | concate\n                    | logic\n                    | function_call\n                    | division\n     arithmetic : number\n        |   arithmetic arith_op arithmetic\n        |   LPAREN arithmetic arith_op arithmetic RPAREN\n    \n    division : number DIVIDE number\n     concate : string\n        |   concate PLUS concate\n        |   LPAREN concate PLUS concate RPAREN\n     comparison : value\n        |   boolean\n        |   comparison comp_op comparison\n        |   LPAREN comparison comp_op comparison RPAREN\n     logic : comparison\n        |   logic logic_op logic\n        |   LPAREN logic logic_op logic RPAREN\n        |   LOGICAL_NOT logic\n     logic_op : LOGICAL_AND\n        |   LOGICAL_OR\n     arith_op : PLUS\n        |   MINUS\n        |   TIMES\n    \n      comp_op : EQUAL\n                 | NOT_EQUAL\n                 | LESS\n                 | LESS_EQUAL\n                 | GREATER\n                 | GREATER_EQUAL\n       values : value\n             | value COMMA values\n value : IDENTIFIER\n         | number\n         | string\n         | list\n  number : INTEGER \n                | DOUBLE\n      string : STRING\n     boolean : TRUE\n                | FALSE\n     list : LSQUARE RSQUARE\n            | LSQUARE values RSQUARE\n    \n    \n    function : type IDENTIFIER LPAREN parameters RPAREN LBRACE lines RBRACE\n     lines : line LINE_BREAK lines\n            | line lines\n            | line\n            | LINE_BREAK\n            |\n\n     line : print\n            | assignment\n            | function\n            | if_statement\n            | while_statement\n            | for_statement\n            | function_call\n            | reassignment\n            \n    \n      parameters : VOID\n                 | parameter\n                 | parameter COMMA parameters\n                 |\n      \n  parameter : type IDENTIFIER\n            | IDENTIFIER \n  \n    map : MAP_TYPE LESS type COMMA type GREATER\n        | MAP_TYPE LESS type COMMA type GREATER LSQUARE values RSQUARE\n        | MAP_TYPE LESS type COMMA type GREATER LSQUARE RSQUARE\n    \n    set : SET_TYPE LESS type GREATER\n        | SET_TYPE LESS type GREATER LSQUARE values RSQUARE\n        | SET_TYPE LESS type GREATER LSQUARE RSQUARE\n    \n    queue : QUEUE_TYPE LESS type GREATER\n          | QUEUE_TYPE LESS type GREATER LSQUARE values RSQUARE\n          | QUEUE_TYPE LESS type GREATER LSQUARE RSQUARE\n    \n    while_statement : WHILE LPAREN logic RPAREN LBRACE lines RBRACE\n    \n    for_statement : FOR LPAREN assignment SEMICOLON logic SEMICOLON reassignment RPAREN LBRACE lines RBRACE\n    '
    
_lr_action_items = {'LBRACE':([0,55,166,167,178,204,],[10,109,186,187,192,205,]),'$end':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,25,26,27,28,29,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,91,92,101,103,104,105,108,110,111,112,114,115,117,123,125,126,127,129,140,141,142,144,150,156,157,158,159,161,172,176,180,181,182,183,184,185,190,191,197,199,200,203,207,],[-11,0,-1,-2,-3,-4,-5,-6,-7,-8,-10,-47,-48,-49,-50,-51,-80,-94,-95,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,-95,-93,-66,-81,-82,-89,-29,-9,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-92,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,-14,-13,-12,-28,-120,-91,-121,]),'PRINT':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,25,27,28,29,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,91,101,103,104,105,108,109,111,112,114,115,117,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[20,-98,-97,-99,-100,-101,-102,20,-104,-47,-48,-49,-103,-51,20,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,20,-66,-81,-82,-89,-29,20,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,20,20,-14,-13,20,-12,-28,-120,-91,20,-121,]),'IF':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,25,27,28,29,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,79,87,91,101,103,104,105,108,109,111,112,114,115,117,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[22,-98,-97,-99,-100,-101,-102,22,-104,-47,-48,-49,-103,-51,22,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,22,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,22,-66,-81,-82,-89,-29,22,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,22,22,-14,-13,22,-12,-28,-120,-91,22,-121,]),'WHILE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,25,27,28,29,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,91,101,103,104,105,108,109,111,112,114,115,117,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[23,-98,-97,-99,-100,-101,-102,23,-104,-47,-48,-49,-103,-51,23,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,23,-66,-81,-82,-89,-29,23,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,23,23,-14,-13,23,-12,-28,-120,-91,23,-121,]),'FOR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,25,27,28,29,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,91,101,103,104,105,108,109,111,112,114,115,117,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[24,-98,-97,-99,-100,-101,-102,24,-104,-47,-48,-49,-103,-51,24,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,24,-66,-81,-82,-89,-29,24,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,24,24,-14,-13,24,-12,-28,-120,-91,24,-121,]),'LINE_BREAK':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,25,27,28,29,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,91,101,103,104,105,108,109,111,112,114,115,117,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[26,-98,-97,-99,-100,-101,-102,26,-104,-47,-48,-49,-103,-51,91,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,26,-66,-81,-82,-89,-29,26,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,26,26,-14,-13,26,-12,-28,-120,-91,26,-121,]),'IDENTIFIER':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,18,21,25,27,28,29,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,71,72,73,74,75,77,78,79,80,81,87,88,89,91,94,95,96,97,98,99,100,101,102,103,104,105,108,109,111,112,114,115,117,118,121,122,123,125,126,127,129,134,135,139,141,142,143,144,145,148,149,150,151,154,156,157,158,159,161,168,172,173,176,179,180,181,182,183,184,185,186,187,190,191,192,196,197,199,200,203,205,207,],[19,-98,-97,-99,-100,-101,-102,65,-104,-47,-48,-49,-103,-51,76,87,65,-52,-56,-63,87,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-84,-85,-86,-59,-60,-83,-87,-88,87,-97,-98,-99,-100,-101,-102,-103,-104,87,-67,-68,119,120,-22,123,-21,87,123,-80,87,87,65,87,-72,-73,-74,-75,-76,-77,-66,87,-81,-82,-89,-29,65,-53,-52,-57,-56,-64,147,123,152,-80,-50,-20,-19,-34,87,87,169,-55,-61,87,-90,87,123,123,-16,177,-46,-17,-18,-32,-33,-27,87,-30,123,-15,152,-31,-26,-54,-58,-65,-62,65,65,-14,-13,65,202,-12,-28,-120,-91,65,-121,]),'LPAREN':([0,19,20,21,22,23,24,30,65,66,67,68,69,70,71,72,73,76,78,81,88,89,94,95,96,97,98,99,100,102,113,116,121,123,132,133,134,135,143,148,149,168,173,],[21,80,81,21,88,89,90,102,80,113,-69,-70,-71,116,102,-67,-68,122,21,21,102,102,143,-72,-73,-74,-75,-76,-77,102,113,116,21,80,113,116,102,143,143,21,21,102,21,]),'LOGICAL_NOT':([0,21,30,71,72,73,78,81,88,89,102,121,134,148,149,168,173,],[30,30,30,30,-67,-68,30,30,30,30,30,30,30,30,30,30,30,]),'LATE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,25,27,28,29,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[31,-98,-97,-99,-100,-101,-102,31,-104,-47,-48,-49,-103,-51,31,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,31,31,-66,-81,-82,-89,-29,31,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,31,31,-14,-13,31,-12,-28,-120,-91,31,-121,]),'FINAL':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,25,27,28,29,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[32,-98,-97,-99,-100,-101,-102,32,-104,-47,-48,-49,-103,-51,32,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,32,32,-66,-81,-82,-89,-29,32,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,32,32,-14,-13,32,-12,-28,-120,-91,32,-121,]),'CONST':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,25,27,28,29,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[33,-98,-97,-99,-100,-101,-102,33,-104,-47,-48,-49,-103,-51,33,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,33,33,-66,-81,-82,-89,-29,33,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,33,33,-14,-13,33,-12,-28,-120,-91,33,-121,]),'INTEGER_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[34,-98,-97,-99,-100,-101,-102,34,-104,-47,-48,-49,-103,-51,34,34,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,34,34,-66,-81,-82,-89,-29,34,-53,-52,-57,-56,-64,34,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,34,-31,-26,-54,-58,-65,-62,34,34,-14,-13,34,-12,-28,-120,-91,34,-121,]),'DOUBLE_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[35,-98,-97,-99,-100,-101,-102,35,-104,-47,-48,-49,-103,-51,35,35,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,35,35,-66,-81,-82,-89,-29,35,-53,-52,-57,-56,-64,35,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,35,-31,-26,-54,-58,-65,-62,35,35,-14,-13,35,-12,-28,-120,-91,35,-121,]),'BOOLEAN_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[36,-98,-97,-99,-100,-101,-102,36,-104,-47,-48,-49,-103,-51,36,36,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,36,36,-66,-81,-82,-89,-29,36,-53,-52,-57,-56,-64,36,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,36,-31,-26,-54,-58,-65,-62,36,36,-14,-13,36,-12,-28,-120,-91,36,-121,]),'QUEUE_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[37,-98,-97,-99,-100,-101,-102,37,-104,-47,-48,-49,-103,-51,37,37,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,37,37,-66,-81,-82,-89,-29,37,-53,-52,-57,-56,-64,37,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,37,-31,-26,-54,-58,-65,-62,37,37,-14,-13,37,-12,-28,-120,-91,37,-121,]),'STRING_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[38,-98,-97,-99,-100,-101,-102,38,-104,-47,-48,-49,-103,-51,38,38,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,38,38,-66,-81,-82,-89,-29,38,-53,-52,-57,-56,-64,38,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,38,-31,-26,-54,-58,-65,-62,38,38,-14,-13,38,-12,-28,-120,-91,38,-121,]),'ENUM_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[39,-98,-97,-99,-100,-101,-102,39,-104,-47,-48,-49,-103,-51,39,39,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,39,39,-66,-81,-82,-89,-29,39,-53,-52,-57,-56,-64,39,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,39,-31,-26,-54,-58,-65,-62,39,39,-14,-13,39,-12,-28,-120,-91,39,-121,]),'VAR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[40,-98,-97,-99,-100,-101,-102,40,-104,-47,-48,-49,-103,-51,40,40,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,40,40,-66,-81,-82,-89,-29,40,-53,-52,-57,-56,-64,40,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,40,-31,-26,-54,-58,-65,-62,40,40,-14,-13,40,-12,-28,-120,-91,40,-121,]),'LIST_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[41,-98,-97,-99,-100,-101,-102,41,-104,-47,-48,-49,-103,-51,41,41,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,41,41,-66,-81,-82,-89,-29,41,-53,-52,-57,-56,-64,41,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,41,-31,-26,-54,-58,-65,-62,41,41,-14,-13,41,-12,-28,-120,-91,41,-121,]),'MAP_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[42,-98,-97,-99,-100,-101,-102,42,-104,-47,-48,-49,-103,-51,42,42,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,42,42,-66,-81,-82,-89,-29,42,-53,-52,-57,-56,-64,42,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,42,-31,-26,-54,-58,-65,-62,42,42,-14,-13,42,-12,-28,-120,-91,42,-121,]),'SET_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[43,-98,-97,-99,-100,-101,-102,43,-104,-47,-48,-49,-103,-51,43,43,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,43,43,-66,-81,-82,-89,-29,43,-53,-52,-57,-56,-64,43,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,43,-31,-26,-54,-58,-65,-62,43,43,-14,-13,43,-12,-28,-120,-91,43,-121,]),'DYNAMIC_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[44,-98,-97,-99,-100,-101,-102,44,-104,-47,-48,-49,-103,-51,44,44,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,44,44,-66,-81,-82,-89,-29,44,-53,-52,-57,-56,-64,44,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,44,-31,-26,-54,-58,-65,-62,44,44,-14,-13,44,-12,-28,-120,-91,44,-121,]),'VOID':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,25,27,28,29,31,32,33,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,79,87,90,91,101,103,104,105,108,109,111,112,114,115,117,122,123,125,126,127,129,141,142,144,150,156,157,158,159,161,172,176,179,180,181,182,183,184,185,186,187,190,191,192,197,199,200,203,205,207,],[45,-98,-97,-99,-100,-101,-102,45,-104,-47,-48,-49,-103,-51,45,45,-52,-56,-63,-23,-24,-25,-84,-85,-86,-59,-60,-83,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,45,45,-66,-81,-82,-89,-29,45,-53,-52,-57,-56,-64,154,-80,-50,-20,-19,-34,-55,-61,-90,-16,-17,-18,-32,-33,-27,-30,-15,154,-31,-26,-54,-58,-65,-62,45,45,-14,-13,45,-12,-28,-120,-91,45,-121,]),'INTEGER':([0,21,30,54,66,67,68,69,71,72,73,78,79,80,81,88,89,93,94,95,96,97,98,99,100,102,113,121,132,134,135,143,145,148,149,168,173,],[46,46,46,46,46,-69,-70,-71,46,-67,-68,46,46,46,46,46,46,46,46,-72,-73,-74,-75,-76,-77,46,46,46,46,46,46,46,46,46,46,46,46,]),'DOUBLE':([0,21,30,54,66,67,68,69,71,72,73,78,79,80,81,88,89,93,94,95,96,97,98,99,100,102,113,121,132,134,135,143,145,148,149,168,173,],[47,47,47,47,47,-69,-70,-71,47,-67,-68,47,47,47,47,47,47,47,47,-72,-73,-74,-75,-76,-77,47,47,47,47,47,47,47,47,47,47,47,47,]),'STRING':([0,21,30,54,70,71,72,73,78,80,81,88,89,94,95,96,97,98,99,100,102,116,121,133,134,135,143,145,148,149,168,173,],[48,48,48,48,48,48,-67,-68,48,48,48,48,48,48,-72,-73,-74,-75,-76,-77,48,48,48,48,48,48,48,48,48,48,48,48,]),'TRUE':([0,21,30,71,72,73,78,81,88,89,94,95,96,97,98,99,100,102,121,134,135,143,148,149,168,173,],[52,52,52,52,-67,-68,52,52,52,52,52,-72,-73,-74,-75,-76,-77,52,52,52,52,52,52,52,52,52,]),'FALSE':([0,21,30,71,72,73,78,81,88,89,94,95,96,97,98,99,100,102,121,134,135,143,148,149,168,173,],[53,53,53,53,-67,-68,53,53,53,53,53,-72,-73,-74,-75,-76,-77,53,53,53,53,53,53,53,53,53,]),'LSQUARE':([0,21,30,54,71,72,73,78,80,81,88,89,94,95,96,97,98,99,100,102,121,134,135,143,145,148,149,168,173,],[54,54,54,54,54,-67,-68,54,54,54,54,54,54,-72,-73,-74,-75,-76,-77,54,54,54,54,54,54,54,54,54,54,]),'ELSE':([6,60,108,172,199,],[55,55,55,-30,-28,]),'RBRACE':([10,12,13,14,16,25,26,27,28,29,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,79,87,91,92,101,103,104,105,108,109,111,112,114,115,117,123,125,126,127,129,140,141,142,144,146,150,156,157,158,159,161,172,176,180,181,182,183,184,185,186,187,190,191,192,194,195,197,198,199,200,203,205,206,207,],[-96,-47,-48,-49,-51,-94,-95,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,110,-97,-98,-99,-100,-101,-102,-103,-104,-21,-80,-95,-93,-66,-81,-82,-89,-29,-96,-53,-52,-57,-56,-64,-80,-50,-20,-19,-34,-92,-55,-61,-90,172,-16,-17,-18,-32,-33,-27,-30,-15,-31,-26,-54,-58,-65,-62,-96,-96,-14,-13,-96,199,200,-12,203,-28,-120,-91,-96,207,-121,]),'SEMICOLON':([12,13,14,16,27,28,29,46,47,48,49,50,51,52,53,79,87,101,103,104,105,111,112,114,115,117,123,124,125,126,129,131,138,141,142,144,150,158,159,160,174,175,176,180,182,183,184,185,188,189,190,191,197,],[-47,-48,-49,-51,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,127,-80,-66,-81,-82,-89,-53,-52,-57,-56,-64,-80,156,-50,157,159,161,168,-55,-61,-90,176,180,-33,181,190,191,-15,-31,-54,-58,-65,-62,196,197,-14,-13,-12,]),'RPAREN':([12,13,14,16,27,28,29,46,47,48,49,50,51,52,53,79,80,81,87,101,103,104,105,107,111,112,114,115,117,122,123,125,126,127,128,129,130,136,137,141,142,144,152,153,154,155,156,157,158,159,162,163,164,165,171,177,179,180,182,183,184,185,193,201,],[-47,-48,-49,-51,-52,-56,-63,-84,-85,-86,-59,-60,-83,-87,-88,-21,129,131,-80,-66,-81,-82,-89,-78,-53,-52,-57,-56,-64,-108,-80,-50,-20,-19,158,-34,160,166,167,-55,-61,-90,-110,178,-105,-106,-17,-18,-32,-33,182,183,184,185,-79,-109,-108,-31,-54,-58,-65,-62,-107,204,]),'PLUS':([12,13,27,28,46,47,48,82,83,86,111,112,114,115,162,163,182,183,],[67,70,-52,-56,-84,-85,-86,67,133,-52,67,-52,70,-56,67,70,-54,-58,]),'MINUS':([12,27,46,47,82,86,111,112,162,182,],[68,-52,-84,-85,68,-52,68,-52,68,-54,]),'TIMES':([12,27,46,47,82,86,111,112,162,182,],[69,-52,-84,-85,69,-52,69,-52,69,-54,]),'LOGICAL_AND':([14,19,27,28,29,46,47,48,49,50,51,52,53,84,85,86,87,101,103,104,105,117,123,136,137,142,144,164,165,184,185,188,],[72,-80,-81,-82,-63,-84,-85,-86,-59,-60,-83,-87,-88,72,-63,-81,-80,72,-81,-82,-89,72,-80,72,72,-61,-90,72,-61,-65,-62,72,]),'LOGICAL_OR':([14,19,27,28,29,46,47,48,49,50,51,52,53,84,85,86,87,101,103,104,105,117,123,136,137,142,144,164,165,184,185,188,],[73,-80,-81,-82,-63,-84,-85,-86,-59,-60,-83,-87,-88,73,-63,-81,-80,73,-81,-82,-89,73,-80,73,73,-61,-90,73,-61,-65,-62,73,]),'QUESTION_MARK':([18,34,35,36,37,38,39,40,41,42,43,44,45,74,139,],[77,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,77,77,]),'ASSIGN':([19,65,76,119,120,147,169,202,],[78,78,121,148,149,173,121,78,]),'INLINE_ARITH':([19,65,202,],[79,79,79,]),'EQUAL':([19,27,28,29,46,47,48,49,50,51,52,53,85,86,87,103,104,105,123,142,144,165,170,185,],[-80,-81,-82,95,-84,-85,-86,-59,-60,-83,-87,-88,95,-81,-80,-81,-82,-89,-80,95,-90,95,95,-62,]),'NOT_EQUAL':([19,27,28,29,46,47,48,49,50,51,52,53,85,86,87,103,104,105,123,142,144,165,170,185,],[-80,-81,-82,96,-84,-85,-86,-59,-60,-83,-87,-88,96,-81,-80,-81,-82,-89,-80,96,-90,96,96,-62,]),'LESS':([19,27,28,29,46,47,48,49,50,51,52,53,85,86,87,103,104,105,123,142,144,165,170,185,],[-80,-81,-82,97,-84,-85,-86,-59,-60,-83,-87,-88,97,-81,-80,-81,-82,-89,-80,97,-90,97,97,-62,]),'LESS_EQUAL':([19,27,28,29,46,47,48,49,50,51,52,53,85,86,87,103,104,105,123,142,144,165,170,185,],[-80,-81,-82,98,-84,-85,-86,-59,-60,-83,-87,-88,98,-81,-80,-81,-82,-89,-80,98,-90,98,98,-62,]),'GREATER':([19,27,28,29,46,47,48,49,50,51,52,53,85,86,87,103,104,105,123,142,144,165,170,185,],[-80,-81,-82,99,-84,-85,-86,-59,-60,-83,-87,-88,99,-81,-80,-81,-82,-89,-80,99,-90,99,99,-62,]),'GREATER_EQUAL':([19,27,28,29,46,47,48,49,50,51,52,53,85,86,87,103,104,105,123,142,144,165,170,185,],[-80,-81,-82,100,-84,-85,-86,-59,-60,-83,-87,-88,100,-81,-80,-81,-82,-89,-80,100,-90,100,100,-62,]),'DIVIDE':([27,46,47,],[93,-84,-85,]),'COMMA':([46,47,48,51,87,103,104,105,107,144,152,155,177,],[-84,-85,-86,-83,-80,-81,-82,-89,145,-90,-110,179,-109,]),'RSQUARE':([46,47,48,51,54,87,103,104,105,106,107,144,171,],[-84,-85,-86,-83,105,-80,-81,-82,-89,144,-78,-90,-79,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,78,81,121,148,149,173,],[2,124,130,150,174,175,189,]),'assignment':([0,10,25,90,91,109,186,187,192,205,],[3,58,58,138,58,58,58,58,58,58,]),'print':([0,10,25,91,109,186,187,192,205,],[4,57,57,57,57,57,57,57,57,]),'function':([0,10,25,91,109,186,187,192,205,],[5,59,59,59,59,59,59,59,59,]),'if_statement':([0,10,25,55,91,109,186,187,192,205,],[6,60,60,108,60,60,60,60,60,60,]),'while_statement':([0,10,25,91,109,186,187,192,205,],[7,61,61,61,61,61,61,61,61,]),'for_statement':([0,10,25,91,109,186,187,192,205,],[8,62,62,62,62,62,62,62,62,]),'lines':([0,10,25,91,109,186,187,192,205,],[9,56,92,140,146,194,195,198,206,]),'reassignment':([0,10,25,91,109,186,187,192,196,205,],[11,64,64,64,64,64,64,64,201,64,]),'arithmetic':([0,21,66,78,81,113,121,132,148,149,173,],[12,82,111,12,12,82,12,162,12,12,12,]),'concate':([0,21,70,78,81,116,121,133,148,149,173,],[13,83,114,13,13,83,13,163,13,13,13,]),'logic':([0,21,30,71,78,81,88,89,102,121,134,148,149,168,173,],[14,84,101,117,14,14,136,137,84,14,164,14,14,188,14,]),'function_call':([0,10,25,78,81,91,109,121,148,149,173,186,187,192,205,],[15,63,63,125,125,63,63,125,125,125,125,63,63,63,63,]),'division':([0,78,81,121,148,149,173,],[16,16,16,16,16,16,16,]),'modifier':([0,10,25,90,91,109,186,187,192,205,],[17,17,17,17,17,17,17,17,17,17,]),'type':([0,10,17,25,90,91,109,122,179,186,187,192,205,],[18,18,74,18,139,18,18,151,151,18,18,18,18,]),'line':([0,10,25,91,109,186,187,192,205,],[25,25,25,25,25,25,25,25,25,]),'number':([0,21,30,54,66,71,78,79,80,81,88,89,93,94,102,113,121,132,134,135,143,145,148,149,168,173,],[27,86,103,103,112,103,27,126,103,27,103,103,141,103,103,112,27,112,103,103,103,103,27,27,103,27,]),'string':([0,21,30,54,70,71,78,80,81,88,89,94,102,116,121,133,134,135,143,145,148,149,168,173,],[28,28,104,104,115,104,28,104,28,104,104,104,104,115,28,115,104,104,104,104,28,28,104,28,]),'comparison':([0,21,30,71,78,81,88,89,94,102,121,134,135,143,148,149,168,173,],[29,85,29,29,29,29,29,29,142,85,29,29,165,170,29,29,29,29,]),'value':([0,21,30,54,71,78,80,81,88,89,94,102,121,134,135,143,145,148,149,168,173,],[49,49,49,107,49,49,107,49,49,49,49,49,49,49,49,49,107,49,49,49,49,]),'boolean':([0,21,30,71,78,81,88,89,94,102,121,134,135,143,148,149,168,173,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'list':([0,21,30,54,71,78,80,81,88,89,94,102,121,134,135,143,145,148,149,168,173,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'arith_op':([12,82,111,162,],[66,132,66,66,]),'logic_op':([14,84,101,117,136,137,164,188,],[71,134,71,71,71,71,71,71,]),'nullable':([18,74,139,],[75,118,75,]),'comp_op':([29,85,142,165,170,],[94,135,94,94,135,]),'values':([54,80,145,],[106,128,171,]),'parameters':([122,179,],[153,193,]),'parameter':([122,179,],[155,155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement','sintactico.py',6),
  ('statement -> assignment','statement',1,'p_statement','sintactico.py',7),
  ('statement -> print','statement',1,'p_statement','sintactico.py',8),
  ('statement -> function','statement',1,'p_statement','sintactico.py',9),
  ('statement -> if_statement','statement',1,'p_statement','sintactico.py',10),
  ('statement -> while_statement','statement',1,'p_statement','sintactico.py',11),
  ('statement -> for_statement','statement',1,'p_statement','sintactico.py',12),
  ('statement -> lines','statement',1,'p_statement','sintactico.py',13),
  ('statement -> LBRACE lines RBRACE','statement',3,'p_statement','sintactico.py',14),
  ('statement -> reassignment','statement',1,'p_statement','sintactico.py',15),
  ('statement -> <empty>','statement',0,'p_statement','sintactico.py',16),
  ('assignment -> modifier type nullable IDENTIFIER ASSIGN expression SEMICOLON','assignment',7,'p_assignment','sintactico.py',19),
  ('assignment -> type nullable IDENTIFIER ASSIGN expression SEMICOLON','assignment',6,'p_assignment','sintactico.py',20),
  ('assignment -> modifier type IDENTIFIER ASSIGN expression SEMICOLON','assignment',6,'p_assignment','sintactico.py',21),
  ('assignment -> type IDENTIFIER ASSIGN expression SEMICOLON','assignment',5,'p_assignment','sintactico.py',22),
  ('assignment -> type IDENTIFIER ASSIGN expression','assignment',4,'p_assignment','sintactico.py',23),
  ('reassignment -> IDENTIFIER ASSIGN expression SEMICOLON','reassignment',4,'p_reassignment','sintactico.py',28),
  ('reassignment -> IDENTIFIER INLINE_ARITH number SEMICOLON','reassignment',4,'p_reassignment','sintactico.py',29),
  ('reassignment -> IDENTIFIER INLINE_ARITH SEMICOLON','reassignment',3,'p_reassignment','sintactico.py',30),
  ('reassignment -> IDENTIFIER INLINE_ARITH number','reassignment',3,'p_reassignment','sintactico.py',31),
  ('reassignment -> IDENTIFIER INLINE_ARITH','reassignment',2,'p_reassignment','sintactico.py',32),
  ('nullable -> QUESTION_MARK','nullable',1,'p_nullable','sintactico.py',36),
  ('modifier -> LATE','modifier',1,'p_modifier','sintactico.py',40),
  ('modifier -> FINAL','modifier',1,'p_modifier','sintactico.py',41),
  ('modifier -> CONST','modifier',1,'p_modifier','sintactico.py',42),
  ('print -> PRINT LPAREN expression RPAREN SEMICOLON','print',5,'p_print','sintactico.py',46),
  ('print -> PRINT LPAREN RPAREN SEMICOLON','print',4,'p_print','sintactico.py',47),
  ('if_statement -> IF LPAREN logic RPAREN LBRACE lines RBRACE','if_statement',7,'p_if_statement','sintactico.py',52),
  ('if_statement -> if_statement ELSE if_statement','if_statement',3,'p_if_statement','sintactico.py',53),
  ('if_statement -> if_statement ELSE LBRACE lines RBRACE','if_statement',5,'p_if_statement','sintactico.py',54),
  ('function_call -> IDENTIFIER LPAREN values RPAREN SEMICOLON','function_call',5,'p_function_call','sintactico.py',60),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','sintactico.py',61),
  ('function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON','function_call',4,'p_function_call','sintactico.py',62),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','sintactico.py',63),
  ('type -> INTEGER_TYPE','type',1,'p_type','sintactico.py',67),
  ('type -> DOUBLE_TYPE','type',1,'p_type','sintactico.py',68),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','sintactico.py',69),
  ('type -> QUEUE_TYPE','type',1,'p_type','sintactico.py',70),
  ('type -> STRING_TYPE','type',1,'p_type','sintactico.py',71),
  ('type -> ENUM_TYPE','type',1,'p_type','sintactico.py',72),
  ('type -> VAR','type',1,'p_type','sintactico.py',73),
  ('type -> LIST_TYPE','type',1,'p_type','sintactico.py',74),
  ('type -> MAP_TYPE','type',1,'p_type','sintactico.py',75),
  ('type -> SET_TYPE','type',1,'p_type','sintactico.py',76),
  ('type -> DYNAMIC_TYPE','type',1,'p_type','sintactico.py',77),
  ('type -> VOID','type',1,'p_type','sintactico.py',78),
  ('expression -> arithmetic','expression',1,'p_expression','sintactico.py',83),
  ('expression -> concate','expression',1,'p_expression','sintactico.py',84),
  ('expression -> logic','expression',1,'p_expression','sintactico.py',85),
  ('expression -> function_call','expression',1,'p_expression','sintactico.py',86),
  ('expression -> division','expression',1,'p_expression','sintactico.py',87),
  ('arithmetic -> number','arithmetic',1,'p_arithmetic','sintactico.py',91),
  ('arithmetic -> arithmetic arith_op arithmetic','arithmetic',3,'p_arithmetic','sintactico.py',92),
  ('arithmetic -> LPAREN arithmetic arith_op arithmetic RPAREN','arithmetic',5,'p_arithmetic','sintactico.py',93),
  ('division -> number DIVIDE number','division',3,'p_division','sintactico.py',98),
  ('concate -> string','concate',1,'p_concate','sintactico.py',104),
  ('concate -> concate PLUS concate','concate',3,'p_concate','sintactico.py',105),
  ('concate -> LPAREN concate PLUS concate RPAREN','concate',5,'p_concate','sintactico.py',106),
  ('comparison -> value','comparison',1,'p_comparison','sintactico.py',110),
  ('comparison -> boolean','comparison',1,'p_comparison','sintactico.py',111),
  ('comparison -> comparison comp_op comparison','comparison',3,'p_comparison','sintactico.py',112),
  ('comparison -> LPAREN comparison comp_op comparison RPAREN','comparison',5,'p_comparison','sintactico.py',113),
  ('logic -> comparison','logic',1,'p_logic','sintactico.py',117),
  ('logic -> logic logic_op logic','logic',3,'p_logic','sintactico.py',118),
  ('logic -> LPAREN logic logic_op logic RPAREN','logic',5,'p_logic','sintactico.py',119),
  ('logic -> LOGICAL_NOT logic','logic',2,'p_logic','sintactico.py',120),
  ('logic_op -> LOGICAL_AND','logic_op',1,'p_logic_op','sintactico.py',124),
  ('logic_op -> LOGICAL_OR','logic_op',1,'p_logic_op','sintactico.py',125),
  ('arith_op -> PLUS','arith_op',1,'p_arith_op','sintactico.py',129),
  ('arith_op -> MINUS','arith_op',1,'p_arith_op','sintactico.py',130),
  ('arith_op -> TIMES','arith_op',1,'p_arith_op','sintactico.py',131),
  ('comp_op -> EQUAL','comp_op',1,'p_comp_op','sintactico.py',136),
  ('comp_op -> NOT_EQUAL','comp_op',1,'p_comp_op','sintactico.py',137),
  ('comp_op -> LESS','comp_op',1,'p_comp_op','sintactico.py',138),
  ('comp_op -> LESS_EQUAL','comp_op',1,'p_comp_op','sintactico.py',139),
  ('comp_op -> GREATER','comp_op',1,'p_comp_op','sintactico.py',140),
  ('comp_op -> GREATER_EQUAL','comp_op',1,'p_comp_op','sintactico.py',141),
  ('values -> value','values',1,'p_values','sintactico.py',146),
  ('values -> value COMMA values','values',3,'p_values','sintactico.py',147),
  ('value -> IDENTIFIER','value',1,'p_value','sintactico.py',151),
  ('value -> number','value',1,'p_value','sintactico.py',152),
  ('value -> string','value',1,'p_value','sintactico.py',153),
  ('value -> list','value',1,'p_value','sintactico.py',154),
  ('number -> INTEGER','number',1,'p_number','sintactico.py',158),
  ('number -> DOUBLE','number',1,'p_number','sintactico.py',159),
  ('string -> STRING','string',1,'p_string','sintactico.py',163),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',167),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',168),
  ('list -> LSQUARE RSQUARE','list',2,'p_list','sintactico.py',172),
  ('list -> LSQUARE values RSQUARE','list',3,'p_list','sintactico.py',173),
  ('function -> type IDENTIFIER LPAREN parameters RPAREN LBRACE lines RBRACE','function',8,'p_function','sintactico.py',179),
  ('lines -> line LINE_BREAK lines','lines',3,'p_lines','sintactico.py',183),
  ('lines -> line lines','lines',2,'p_lines','sintactico.py',184),
  ('lines -> line','lines',1,'p_lines','sintactico.py',185),
  ('lines -> LINE_BREAK','lines',1,'p_lines','sintactico.py',186),
  ('lines -> <empty>','lines',0,'p_lines','sintactico.py',187),
  ('line -> print','line',1,'p_line','sintactico.py',192),
  ('line -> assignment','line',1,'p_line','sintactico.py',193),
  ('line -> function','line',1,'p_line','sintactico.py',194),
  ('line -> if_statement','line',1,'p_line','sintactico.py',195),
  ('line -> while_statement','line',1,'p_line','sintactico.py',196),
  ('line -> for_statement','line',1,'p_line','sintactico.py',197),
  ('line -> function_call','line',1,'p_line','sintactico.py',198),
  ('line -> reassignment','line',1,'p_line','sintactico.py',199),
  ('parameters -> VOID','parameters',1,'p_parameters','sintactico.py',205),
  ('parameters -> parameter','parameters',1,'p_parameters','sintactico.py',206),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','sintactico.py',207),
  ('parameters -> <empty>','parameters',0,'p_parameters','sintactico.py',208),
  ('parameter -> type IDENTIFIER','parameter',2,'p_parameter','sintactico.py',213),
  ('parameter -> IDENTIFIER','parameter',1,'p_parameter','sintactico.py',214),
  ('map -> MAP_TYPE LESS type COMMA type GREATER','map',6,'p_map','sintactico.py',218),
  ('map -> MAP_TYPE LESS type COMMA type GREATER LSQUARE values RSQUARE','map',9,'p_map','sintactico.py',219),
  ('map -> MAP_TYPE LESS type COMMA type GREATER LSQUARE RSQUARE','map',8,'p_map','sintactico.py',220),
  ('set -> SET_TYPE LESS type GREATER','set',4,'p_set','sintactico.py',225),
  ('set -> SET_TYPE LESS type GREATER LSQUARE values RSQUARE','set',7,'p_set','sintactico.py',226),
  ('set -> SET_TYPE LESS type GREATER LSQUARE RSQUARE','set',6,'p_set','sintactico.py',227),
  ('queue -> QUEUE_TYPE LESS type GREATER','queue',4,'p_queue','sintactico.py',231),
  ('queue -> QUEUE_TYPE LESS type GREATER LSQUARE values RSQUARE','queue',7,'p_queue','sintactico.py',232),
  ('queue -> QUEUE_TYPE LESS type GREATER LSQUARE RSQUARE','queue',6,'p_queue','sintactico.py',233),
  ('while_statement -> WHILE LPAREN logic RPAREN LBRACE lines RBRACE','while_statement',7,'p_while_statement','sintactico.py',237),
  ('for_statement -> FOR LPAREN assignment SEMICOLON logic SEMICOLON reassignment RPAREN LBRACE lines RBRACE','for_statement',11,'p_for_statement','sintactico.py',243),
]
