
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ASSIGN BLOCKCOMMENT BOOLEAN_TYPE BREAK CASE CATCH COLON COMMA COMMENT CONST CONTINUE DEFAULT DIVIDE DO DOT DOUBLE DOUBLE_TYPE DYNAMIC_TYPE ELSE ENUM ENUM_TYPE EQUAL EXTENDS FALSE FINAL FINALLY FOR GET GREATER GREATER_EQUAL IDENTIFIER IF IMPLEMENTS IN INLINE_ARITH INTEGER INTEGER_TYPE LBRACE LESS LESS_EQUAL LINE_BREAK LIST_TYPE LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSQUARE MAP_TYPE MINUS NOT_EQUAL NULL PLUS PRINT QUESTION_MARK QUEUE_TYPE RBRACE RETURN RPAREN RSQUARE SEMICOLON SET_TYPE STRING STRING_TYPE SWITCH THROW TIMES TRUE TRY TYPEDEF VAR VOID WHILE ZERO\n    statement : expression\n              | assignment\n              | print\n              | function\n              | if_statement\n              | while_statement\n              | for_statement\n              | lines\n              | LBRACE lines RBRACE\n              | reassignment\n              | \n      assignment : modifier type nullable IDENTIFIER ASSIGN expression SEMICOLON\n                    | type nullable IDENTIFIER ASSIGN expression SEMICOLON\n                    | modifier type IDENTIFIER ASSIGN expression SEMICOLON\n                    | type IDENTIFIER ASSIGN expression SEMICOLON\n                    | type IDENTIFIER ASSIGN expression\n                    | int_assignment\n                    | string_assignment\n      int_assignment : modifier number_type nullable IDENTIFIER ASSIGN NULL SEMICOLON\n                    | number_type nullable IDENTIFIER ASSIGN NULL SEMICOLON\n                    | modifier number_type nullable IDENTIFIER ASSIGN arithmetic SEMICOLON\n                    | number_type nullable IDENTIFIER ASSIGN arithmetic SEMICOLON\n                    | modifier number_type IDENTIFIER ASSIGN arithmetic SEMICOLON\n                    | number_type IDENTIFIER ASSIGN arithmetic SEMICOLON\n                    | number_type IDENTIFIER ASSIGN arithmetic\n      string_assignment : modifier string_type nullable IDENTIFIER ASSIGN NULL SEMICOLON\n                    | string_type nullable IDENTIFIER ASSIGN NULL SEMICOLON\n                    | modifier string_type nullable IDENTIFIER ASSIGN concate SEMICOLON\n                    | string_type nullable IDENTIFIER ASSIGN concate SEMICOLON\n                    | modifier string_type IDENTIFIER ASSIGN concate SEMICOLON\n                    | string_type IDENTIFIER ASSIGN concate SEMICOLON\n                    | string_type IDENTIFIER ASSIGN concate\n     number_type : INTEGER_TYPE\n                        | VAR\n                        | DOUBLE_TYPE\n     string_type : STRING_TYPE\n                        | VAR\n    \n        reassignment : IDENTIFIER ASSIGN expression SEMICOLON\n                     | IDENTIFIER INLINE_ARITH number SEMICOLON\n                     | IDENTIFIER INLINE_ARITH SEMICOLON\n                     | IDENTIFIER INLINE_ARITH number\n                     | IDENTIFIER INLINE_ARITH\n     nullable : QUESTION_MARK\n     modifier : FINAL\n                | CONST\n      print : PRINT LPAREN expression RPAREN SEMICOLON\n                | PRINT LPAREN RPAREN SEMICOLON\n    \n    if_statement : IF LPAREN logic RPAREN LBRACE lines RBRACE\n                 | if_statement ELSE if_statement\n                 | if_statement ELSE LBRACE lines RBRACE\n    \n    function_call : IDENTIFIER LPAREN values RPAREN SEMICOLON\n                    | IDENTIFIER LPAREN values RPAREN\n                    | IDENTIFIER LPAREN RPAREN SEMICOLON\n                    | IDENTIFIER LPAREN RPAREN\n     type : INTEGER_TYPE\n            | DOUBLE_TYPE\n            | BOOLEAN_TYPE\n            | QUEUE_TYPE\n            | STRING_TYPE\n            | ENUM_TYPE\n            | VAR\n            | LIST_TYPE\n            | MAP_TYPE\n            | SET_TYPE\n            | DYNAMIC_TYPE\n            | VOID\n\n      expression : arithmetic\n                    | concate\n                    | logic\n                    | function_call\n                    | division\n     arithmetic : number\n        |   arithmetic arith_op arithmetic\n        |   LPAREN arithmetic arith_op arithmetic RPAREN\n    \n    division : number DIVIDE number\n     concate : string\n        |   concate PLUS concate\n        |   LPAREN concate PLUS concate RPAREN\n     comparison : values\n        |   boolean\n        |   comparison comp_op comparison\n        |   LPAREN comparison comp_op number comparison\n     logic : comparison\n        |   logic logic_op logic\n        |   LPAREN logic logic_op logic RPAREN\n        |   LOGICAL_NOT logic\n     logic_op : LOGICAL_AND\n        |   LOGICAL_OR\n     arith_op : PLUS\n        |   MINUS\n        |   TIMES\n    \n      comp_op : EQUAL\n                 | NOT_EQUAL\n                 | LESS\n                 | LESS_EQUAL\n                 | GREATER\n                 | GREATER_EQUAL\n       values : value\n             | value COMMA values\n value : IDENTIFIER\n         | number\n         | string\n         | list\n  number : INTEGER \n                | DOUBLE\n      string : STRING\n     boolean : TRUE\n                | FALSE\n     list : LSQUARE RSQUARE\n            | LSQUARE values RSQUARE\n    \n    \n    function : type IDENTIFIER LPAREN parameters RPAREN LBRACE lines RBRACE\n     lines : line LINE_BREAK lines\n            | line lines\n            | line\n            | LINE_BREAK\n            |\n\n     line : print\n            | assignment\n            | function\n            | if_statement\n            | while_statement\n            | for_statement\n            | function_call\n            | reassignment\n            \n    \n      parameters : VOID\n                 | parameter\n                 | parameter COMMA parameters\n                 |\n      \n  parameter : type IDENTIFIER\n            | IDENTIFIER \n  \n    map : MAP_TYPE LESS type COMMA type GREATER\n        | MAP_TYPE LESS type COMMA type GREATER LSQUARE values RSQUARE\n        | MAP_TYPE LESS type COMMA type GREATER LSQUARE RSQUARE\n    \n    set : SET_TYPE LESS type GREATER\n        | SET_TYPE LESS type GREATER LSQUARE values RSQUARE\n        | SET_TYPE LESS type GREATER LSQUARE RSQUARE\n    \n    queue : QUEUE_TYPE LESS type GREATER\n          | QUEUE_TYPE LESS type GREATER LSQUARE values RSQUARE\n          | QUEUE_TYPE LESS type GREATER LSQUARE RSQUARE\n    \n    while_statement : WHILE LPAREN logic RPAREN LBRACE lines RBRACE\n    \n    for_statement : FOR LPAREN assignment SEMICOLON logic SEMICOLON reassignment RPAREN LBRACE lines RBRACE\n    '
    
_lr_action_items = {'LBRACE':([0,59,192,193,211,257,],[10,119,219,220,237,258,]),'$end':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,27,28,29,30,31,33,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,97,98,107,109,110,116,118,120,121,122,124,125,127,137,139,140,141,143,154,155,156,162,163,172,182,183,184,185,187,198,200,201,209,213,214,215,216,217,218,224,227,229,232,235,236,242,243,244,245,246,247,248,249,250,252,253,256,260,],[-11,0,-1,-2,-3,-4,-5,-6,-7,-8,-10,-67,-68,-69,-70,-71,-100,-17,-18,-114,-115,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,-115,-113,-86,-101,-102,-109,-49,-9,-73,-72,-77,-76,-84,-100,-70,-41,-40,-54,-112,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,-51,-46,-74,-78,-85,-82,-24,-31,-14,-23,-30,-13,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,-141,]),'PRINT':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,27,29,30,31,33,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,97,107,109,110,116,118,119,121,122,124,125,127,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[22,-118,-117,-119,-120,-121,-122,22,-124,-67,-68,-69,-123,-71,-17,-18,22,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,22,-86,-101,-102,-109,-49,22,-73,-72,-77,-76,-84,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,-51,-46,-74,-78,-85,-82,22,22,-24,-31,-14,-23,-30,-13,22,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,22,-141,]),'IF':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,27,29,30,31,33,50,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,85,93,97,107,109,110,116,118,119,121,122,124,125,127,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[24,-118,-117,-119,-120,-121,-122,24,-124,-67,-68,-69,-123,-71,-17,-18,24,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,24,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,24,-86,-101,-102,-109,-49,24,-73,-72,-77,-76,-84,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,-51,-46,-74,-78,-85,-82,24,24,-24,-31,-14,-23,-30,-13,24,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,24,-141,]),'WHILE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,27,29,30,31,33,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,97,107,109,110,116,118,119,121,122,124,125,127,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[25,-118,-117,-119,-120,-121,-122,25,-124,-67,-68,-69,-123,-71,-17,-18,25,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,25,-86,-101,-102,-109,-49,25,-73,-72,-77,-76,-84,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,-51,-46,-74,-78,-85,-82,25,25,-24,-31,-14,-23,-30,-13,25,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,25,-141,]),'FOR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,27,29,30,31,33,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,97,107,109,110,116,118,119,121,122,124,125,127,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[26,-118,-117,-119,-120,-121,-122,26,-124,-67,-68,-69,-123,-71,-17,-18,26,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,26,-86,-101,-102,-109,-49,26,-73,-72,-77,-76,-84,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,-51,-46,-74,-78,-85,-82,26,26,-24,-31,-14,-23,-30,-13,26,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,26,-141,]),'LINE_BREAK':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,27,29,30,31,33,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,97,107,109,110,116,118,119,121,122,124,125,127,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[28,-118,-117,-119,-120,-121,-122,28,-124,-67,-68,-69,-123,-71,-17,-18,97,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,28,-86,-101,-102,-109,-49,28,-73,-72,-77,-76,-84,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,-51,-46,-74,-78,-85,-82,28,28,-24,-31,-14,-23,-30,-13,28,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,28,-141,]),'IDENTIFIER':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,18,20,21,23,27,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,75,76,77,78,79,80,81,83,84,85,86,87,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,111,113,115,116,118,119,121,122,124,125,127,128,130,132,135,136,137,139,140,141,143,148,149,153,155,156,157,162,163,166,171,172,173,176,178,179,180,181,182,183,184,185,187,191,194,198,200,201,202,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,241,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[19,-118,-117,-119,-120,-121,-122,69,-124,-67,-68,-69,-123,-71,82,-17,-18,93,69,-72,-76,-83,93,-79,-33,-35,-57,-58,-36,-60,-34,-62,-63,-64,-65,-66,112,114,-104,-105,-106,-80,-98,-107,-108,-103,93,-117,-118,-119,-120,-121,-122,-123,-124,93,-87,-88,129,131,133,134,-43,137,-42,93,137,-100,93,93,69,93,-92,-93,-94,-95,-96,-97,-86,93,-101,-102,158,160,93,-109,-49,69,-73,-72,-77,-76,-84,165,167,169,137,174,-100,-70,-41,-40,-54,93,93,195,-75,-81,93,-99,-110,137,137,-16,210,-66,-55,-56,-59,-61,-38,-39,-52,-53,-47,93,93,-25,-32,-50,137,-15,174,-51,-46,-74,-78,-85,-82,69,69,-24,-31,-14,-23,-30,-13,69,255,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,69,-141,]),'LPAREN':([0,19,22,23,24,25,26,32,50,51,69,70,71,72,73,74,75,76,77,82,84,87,94,95,100,101,102,103,104,105,106,108,123,126,135,137,146,147,148,149,157,159,161,166,168,170,171,191,194,197,199,202,204,206,],[23,86,87,23,94,95,96,108,-104,-105,86,123,-89,-90,-91,126,108,-87,-88,136,23,23,108,108,157,-92,-93,-94,-95,-96,-97,108,123,126,23,86,123,126,108,157,157,123,126,23,123,126,23,157,108,123,126,23,123,126,]),'LOGICAL_NOT':([0,23,32,75,76,77,84,87,94,95,108,135,148,166,171,194,202,],[32,32,32,32,-87,-88,32,32,32,32,32,32,32,32,32,32,32,]),'FINAL':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,27,29,30,31,33,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[34,-118,-117,-119,-120,-121,-122,34,-124,-67,-68,-69,-123,-71,-17,-18,34,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,34,34,-86,-101,-102,-109,-49,34,-73,-72,-77,-76,-84,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,-51,-46,-74,-78,-85,-82,34,34,-24,-31,-14,-23,-30,-13,34,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,34,-141,]),'CONST':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,20,21,27,29,30,31,33,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[35,-118,-117,-119,-120,-121,-122,35,-124,-67,-68,-69,-123,-71,-17,-18,35,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,35,35,-86,-101,-102,-109,-49,35,-73,-72,-77,-76,-84,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,-51,-46,-74,-78,-85,-82,35,35,-24,-31,-14,-23,-30,-13,35,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,35,-141,]),'INTEGER_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[36,-118,-117,-119,-120,-121,-122,36,-124,-67,-68,-69,-123,-71,36,-17,-18,36,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,36,36,-86,-101,-102,-109,-49,36,-73,-72,-77,-76,-84,178,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,178,-51,-46,-74,-78,-85,-82,36,36,-24,-31,-14,-23,-30,-13,36,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,36,-141,]),'DOUBLE_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[37,-118,-117,-119,-120,-121,-122,37,-124,-67,-68,-69,-123,-71,37,-17,-18,37,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,37,37,-86,-101,-102,-109,-49,37,-73,-72,-77,-76,-84,179,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,179,-51,-46,-74,-78,-85,-82,37,37,-24,-31,-14,-23,-30,-13,37,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,37,-141,]),'BOOLEAN_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[38,-118,-117,-119,-120,-121,-122,38,-124,-67,-68,-69,-123,-71,38,-17,-18,38,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,38,38,-86,-101,-102,-109,-49,38,-73,-72,-77,-76,-84,38,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,38,-51,-46,-74,-78,-85,-82,38,38,-24,-31,-14,-23,-30,-13,38,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,38,-141,]),'QUEUE_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[39,-118,-117,-119,-120,-121,-122,39,-124,-67,-68,-69,-123,-71,39,-17,-18,39,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,39,39,-86,-101,-102,-109,-49,39,-73,-72,-77,-76,-84,39,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,39,-51,-46,-74,-78,-85,-82,39,39,-24,-31,-14,-23,-30,-13,39,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,39,-141,]),'STRING_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[40,-118,-117,-119,-120,-121,-122,40,-124,-67,-68,-69,-123,-71,40,-17,-18,40,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,40,40,-86,-101,-102,-109,-49,40,-73,-72,-77,-76,-84,180,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,180,-51,-46,-74,-78,-85,-82,40,40,-24,-31,-14,-23,-30,-13,40,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,40,-141,]),'ENUM_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[41,-118,-117,-119,-120,-121,-122,41,-124,-67,-68,-69,-123,-71,41,-17,-18,41,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,41,41,-86,-101,-102,-109,-49,41,-73,-72,-77,-76,-84,41,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,41,-51,-46,-74,-78,-85,-82,41,41,-24,-31,-14,-23,-30,-13,41,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,41,-141,]),'VAR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[42,-118,-117,-119,-120,-121,-122,42,-124,-67,-68,-69,-123,-71,42,-17,-18,42,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,42,42,-86,-101,-102,-109,-49,42,-73,-72,-77,-76,-84,181,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,181,-51,-46,-74,-78,-85,-82,42,42,-24,-31,-14,-23,-30,-13,42,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,42,-141,]),'LIST_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[43,-118,-117,-119,-120,-121,-122,43,-124,-67,-68,-69,-123,-71,43,-17,-18,43,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,43,43,-86,-101,-102,-109,-49,43,-73,-72,-77,-76,-84,43,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,43,-51,-46,-74,-78,-85,-82,43,43,-24,-31,-14,-23,-30,-13,43,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,43,-141,]),'MAP_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[44,-118,-117,-119,-120,-121,-122,44,-124,-67,-68,-69,-123,-71,44,-17,-18,44,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,44,44,-86,-101,-102,-109,-49,44,-73,-72,-77,-76,-84,44,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,44,-51,-46,-74,-78,-85,-82,44,44,-24,-31,-14,-23,-30,-13,44,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,44,-141,]),'SET_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[45,-118,-117,-119,-120,-121,-122,45,-124,-67,-68,-69,-123,-71,45,-17,-18,45,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,45,45,-86,-101,-102,-109,-49,45,-73,-72,-77,-76,-84,45,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,45,-51,-46,-74,-78,-85,-82,45,45,-24,-31,-14,-23,-30,-13,45,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,45,-141,]),'DYNAMIC_TYPE':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[46,-118,-117,-119,-120,-121,-122,46,-124,-67,-68,-69,-123,-71,46,-17,-18,46,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,46,46,-86,-101,-102,-109,-49,46,-73,-72,-77,-76,-84,46,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,46,-51,-46,-74,-78,-85,-82,46,46,-24,-31,-14,-23,-30,-13,46,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,46,-141,]),'VOID':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,27,29,30,31,33,34,35,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,85,93,96,97,107,109,110,116,118,119,121,122,124,125,127,136,137,139,140,141,143,155,156,162,163,172,182,183,184,185,187,198,200,201,209,212,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,242,243,244,245,246,247,248,249,250,252,253,256,258,260,],[47,-118,-117,-119,-120,-121,-122,47,-124,-67,-68,-69,-123,-71,47,-17,-18,47,-72,-76,-83,-79,-44,-45,-104,-105,-106,-80,-98,-107,-108,-103,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,47,47,-86,-101,-102,-109,-49,47,-73,-72,-77,-76,-84,176,-100,-70,-41,-40,-54,-75,-81,-99,-110,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,176,-51,-46,-74,-78,-85,-82,47,47,-24,-31,-14,-23,-30,-13,47,-20,-22,-27,-29,-12,-19,-21,-26,-28,-48,-140,-111,47,-141,]),'INTEGER':([0,23,32,50,51,58,70,71,72,73,75,76,77,84,85,86,87,94,95,99,100,101,102,103,104,105,106,108,115,123,135,146,148,149,157,159,166,168,171,191,194,197,202,204,],[50,50,50,-104,-105,50,50,-89,-90,-91,50,-87,-88,50,50,50,50,50,50,50,50,-92,-93,-94,-95,-96,-97,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'DOUBLE':([0,23,32,50,51,58,70,71,72,73,75,76,77,84,85,86,87,94,95,99,100,101,102,103,104,105,106,108,115,123,135,146,148,149,157,159,166,168,171,191,194,197,202,204,],[51,51,51,-104,-105,51,51,-89,-90,-91,51,-87,-88,51,51,51,51,51,51,51,51,-92,-93,-94,-95,-96,-97,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'STRING':([0,23,32,50,51,58,74,75,76,77,84,86,87,94,95,100,101,102,103,104,105,106,108,115,126,135,147,148,149,157,161,166,170,171,191,194,199,202,206,],[52,52,52,-104,-105,52,52,52,-87,-88,52,52,52,52,52,52,-92,-93,-94,-95,-96,-97,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'TRUE':([0,23,32,50,51,75,76,77,84,87,94,95,100,101,102,103,104,105,106,108,135,148,149,157,166,171,191,194,202,],[55,55,55,-104,-105,55,-87,-88,55,55,55,55,55,-92,-93,-94,-95,-96,-97,55,55,55,55,55,55,55,55,55,55,]),'FALSE':([0,23,32,50,51,75,76,77,84,87,94,95,100,101,102,103,104,105,106,108,135,148,149,157,166,171,191,194,202,],[56,56,56,-104,-105,56,-87,-88,56,56,56,56,56,-92,-93,-94,-95,-96,-97,56,56,56,56,56,56,56,56,56,56,]),'LSQUARE':([0,23,32,50,51,58,75,76,77,84,86,87,94,95,100,101,102,103,104,105,106,108,115,135,148,149,157,166,171,191,194,202,],[58,58,58,-104,-105,58,58,-87,-88,58,58,58,58,58,58,-92,-93,-94,-95,-96,-97,58,58,58,58,58,58,58,58,58,58,58,]),'ELSE':([6,64,118,201,252,],[59,59,59,-50,-48,]),'RBRACE':([10,12,13,14,16,20,21,27,28,29,30,31,33,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,85,93,97,98,107,109,110,116,118,119,121,122,124,125,127,137,139,140,141,143,154,155,156,162,163,164,172,182,183,184,185,187,198,200,201,209,213,214,215,216,217,218,219,220,224,227,229,232,235,236,237,239,240,242,243,244,245,246,247,248,249,250,251,252,253,256,258,259,260,],[-116,-67,-68,-69,-71,-17,-18,-114,-115,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,120,-117,-118,-119,-120,-121,-122,-123,-124,-42,-100,-115,-113,-86,-101,-102,-109,-49,-116,-73,-72,-77,-76,-84,-100,-70,-41,-40,-54,-112,-75,-81,-99,-110,201,-16,-38,-39,-52,-53,-47,-25,-32,-50,-15,-51,-46,-74,-78,-85,-82,-116,-116,-24,-31,-14,-23,-30,-13,-116,252,253,-20,-22,-27,-29,-12,-19,-21,-26,-28,256,-48,-140,-111,-116,260,-141,]),'SEMICOLON':([12,13,14,16,20,21,29,30,31,33,50,51,52,53,54,55,56,57,85,93,107,109,110,116,121,122,124,125,127,137,138,139,140,143,145,152,155,156,162,163,172,184,185,186,198,200,203,205,207,208,209,213,215,216,217,218,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,242,243,244,245,246,247,248,249,250,],[-67,-68,-69,-71,-17,-18,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,141,-100,-86,-101,-102,-109,-73,-72,-77,-76,-84,-100,182,-70,183,185,187,194,-75,-81,-99,-110,209,213,-53,214,224,227,229,232,235,236,-15,-51,-74,-78,-85,-82,241,242,243,-24,244,245,-31,246,-14,247,248,-23,249,250,-30,-13,-20,-22,-27,-29,-12,-19,-21,-26,-28,]),'RPAREN':([12,13,14,16,29,30,31,33,50,51,52,53,54,55,56,57,85,86,87,93,107,109,110,116,121,122,124,125,127,136,137,139,140,141,142,143,144,150,151,155,156,162,163,174,175,176,177,182,183,184,185,188,189,190,210,212,213,215,216,217,218,238,254,],[-67,-68,-69,-71,-72,-76,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,-42,143,145,-100,-86,-101,-102,-109,-73,-72,-77,-76,-84,-128,-100,-70,-41,-40,184,-54,186,192,193,-75,-81,-99,-110,-130,211,-125,-126,-38,-39,-52,-53,215,216,217,-129,-128,-51,-74,-78,-85,-82,-127,257,]),'PLUS':([12,13,29,30,50,51,52,88,89,92,121,122,124,125,188,189,198,200,205,207,215,216,223,226,231,234,],[71,74,-72,-76,-104,-105,-106,71,147,-72,71,-72,74,-76,71,74,71,74,71,74,-74,-78,71,74,71,74,]),'MINUS':([12,29,50,51,88,92,121,122,188,198,205,215,223,231,],[72,-72,-104,-105,72,-72,72,-72,72,72,72,-74,72,72,]),'TIMES':([12,29,50,51,88,92,121,122,188,198,205,215,223,231,],[73,-72,-104,-105,73,-72,73,-72,73,73,73,-74,73,73,]),'LOGICAL_AND':([14,19,29,30,31,33,50,51,52,53,54,55,56,57,90,91,92,93,107,109,110,116,127,137,150,151,156,162,163,190,191,217,218,221,],[76,-100,-101,-102,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,76,-83,-101,-100,76,-101,-102,-109,76,-100,76,76,-81,-99,-110,76,-101,-85,-82,76,]),'LOGICAL_OR':([14,19,29,30,31,33,50,51,52,53,54,55,56,57,90,91,92,93,107,109,110,116,127,137,150,151,156,162,163,190,191,217,218,221,],[77,-100,-101,-102,-83,-79,-104,-105,-106,-80,-98,-107,-108,-103,77,-83,-101,-100,77,-101,-102,-109,77,-100,77,77,-81,-99,-110,77,-101,-85,-82,77,]),'QUESTION_MARK':([18,36,37,38,39,40,41,42,43,44,45,46,47,48,49,78,79,80,153,],[83,-33,-35,-57,-58,-36,-60,-34,-62,-63,-64,-65,-66,83,83,83,83,83,83,]),'ASSIGN':([19,69,82,112,114,129,131,133,134,158,160,165,167,169,195,255,],[84,84,135,159,161,166,168,170,171,197,199,202,204,206,135,84,]),'INLINE_ARITH':([19,69,255,],[85,85,85,]),'COMMA':([19,29,30,50,51,52,54,57,92,93,109,110,116,137,163,174,177,191,210,],[-100,-101,-102,-104,-105,-106,115,-103,-101,-100,-101,-102,-109,-100,-110,-130,212,-101,-129,]),'EQUAL':([19,29,30,31,33,50,51,52,53,54,55,56,57,91,92,93,109,110,116,137,156,162,163,191,196,218,],[-100,-101,-102,101,-79,-104,-105,-106,-80,-98,-107,-108,-103,101,-101,-100,-101,-102,-109,-100,101,-99,-110,-101,101,101,]),'NOT_EQUAL':([19,29,30,31,33,50,51,52,53,54,55,56,57,91,92,93,109,110,116,137,156,162,163,191,196,218,],[-100,-101,-102,102,-79,-104,-105,-106,-80,-98,-107,-108,-103,102,-101,-100,-101,-102,-109,-100,102,-99,-110,-101,102,102,]),'LESS':([19,29,30,31,33,50,51,52,53,54,55,56,57,91,92,93,109,110,116,137,156,162,163,191,196,218,],[-100,-101,-102,103,-79,-104,-105,-106,-80,-98,-107,-108,-103,103,-101,-100,-101,-102,-109,-100,103,-99,-110,-101,103,103,]),'LESS_EQUAL':([19,29,30,31,33,50,51,52,53,54,55,56,57,91,92,93,109,110,116,137,156,162,163,191,196,218,],[-100,-101,-102,104,-79,-104,-105,-106,-80,-98,-107,-108,-103,104,-101,-100,-101,-102,-109,-100,104,-99,-110,-101,104,104,]),'GREATER':([19,29,30,31,33,50,51,52,53,54,55,56,57,91,92,93,109,110,116,137,156,162,163,191,196,218,],[-100,-101,-102,105,-79,-104,-105,-106,-80,-98,-107,-108,-103,105,-101,-100,-101,-102,-109,-100,105,-99,-110,-101,105,105,]),'GREATER_EQUAL':([19,29,30,31,33,50,51,52,53,54,55,56,57,91,92,93,109,110,116,137,156,162,163,191,196,218,],[-100,-101,-102,106,-79,-104,-105,-106,-80,-98,-107,-108,-103,106,-101,-100,-101,-102,-109,-100,106,-99,-110,-101,106,106,]),'DIVIDE':([29,50,51,],[99,-104,-105,]),'RSQUARE':([50,51,52,54,57,58,93,109,110,116,117,162,163,],[-104,-105,-106,-98,-103,116,-100,-101,-102,-109,163,-99,-110,]),'NULL':([197,199,204,206,],[222,225,230,233,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,84,87,135,166,171,202,],[2,138,144,172,203,208,228,]),'assignment':([0,10,27,96,97,119,219,220,237,258,],[3,62,62,152,62,62,62,62,62,62,]),'print':([0,10,27,97,119,219,220,237,258,],[4,61,61,61,61,61,61,61,61,]),'function':([0,10,27,97,119,219,220,237,258,],[5,63,63,63,63,63,63,63,63,]),'if_statement':([0,10,27,59,97,119,219,220,237,258,],[6,64,64,118,64,64,64,64,64,64,]),'while_statement':([0,10,27,97,119,219,220,237,258,],[7,65,65,65,65,65,65,65,65,]),'for_statement':([0,10,27,97,119,219,220,237,258,],[8,66,66,66,66,66,66,66,66,]),'lines':([0,10,27,97,119,219,220,237,258,],[9,60,98,154,164,239,240,251,259,]),'reassignment':([0,10,27,97,119,219,220,237,241,258,],[11,68,68,68,68,68,68,68,254,68,]),'arithmetic':([0,23,70,84,87,123,135,146,159,166,168,171,197,202,204,],[12,88,121,12,12,88,12,188,198,12,205,12,223,12,231,]),'concate':([0,23,74,84,87,126,135,147,161,166,170,171,199,202,206,],[13,89,124,13,13,89,13,189,200,13,207,13,226,13,234,]),'logic':([0,23,32,75,84,87,94,95,108,135,148,166,171,194,202,],[14,90,107,127,14,14,150,151,90,14,190,14,14,221,14,]),'function_call':([0,10,27,84,87,97,119,135,166,171,202,219,220,237,258,],[15,67,67,139,139,67,67,139,139,139,139,67,67,67,67,]),'division':([0,84,87,135,166,171,202,],[16,16,16,16,16,16,16,]),'modifier':([0,10,27,96,97,119,219,220,237,258,],[17,17,17,17,17,17,17,17,17,17,]),'type':([0,10,17,27,96,97,119,136,212,219,220,237,258,],[18,18,78,18,153,18,18,173,173,18,18,18,18,]),'int_assignment':([0,10,27,96,97,119,219,220,237,258,],[20,20,20,20,20,20,20,20,20,20,]),'string_assignment':([0,10,27,96,97,119,219,220,237,258,],[21,21,21,21,21,21,21,21,21,21,]),'line':([0,10,27,97,119,219,220,237,258,],[27,27,27,27,27,27,27,27,27,]),'number':([0,23,32,58,70,75,84,85,86,87,94,95,99,100,108,115,123,135,146,148,149,157,159,166,168,171,191,194,197,202,204,],[29,92,109,109,122,109,29,140,109,29,109,109,155,109,109,109,122,29,122,109,191,109,122,29,122,29,109,109,122,29,122,]),'string':([0,23,32,58,74,75,84,86,87,94,95,100,108,115,126,135,147,148,149,157,161,166,170,171,191,194,199,202,206,],[30,30,110,110,125,110,30,110,30,110,110,110,110,110,125,30,125,110,110,110,125,30,125,30,110,110,125,30,125,]),'comparison':([0,23,32,75,84,87,94,95,100,108,135,148,149,157,166,171,191,194,202,],[31,91,31,31,31,31,31,31,156,91,31,31,156,196,31,31,218,31,31,]),'values':([0,23,32,58,75,84,86,87,94,95,100,108,115,135,148,149,157,166,171,191,194,202,],[33,33,33,117,33,33,142,33,33,33,33,33,162,33,33,33,33,33,33,33,33,33,]),'number_type':([0,10,17,27,96,97,119,219,220,237,258,],[48,48,79,48,48,48,48,48,48,48,48,]),'string_type':([0,10,17,27,96,97,119,219,220,237,258,],[49,49,80,49,49,49,49,49,49,49,49,]),'boolean':([0,23,32,75,84,87,94,95,100,108,135,148,149,157,166,171,191,194,202,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'value':([0,23,32,58,75,84,86,87,94,95,100,108,115,135,148,149,157,166,171,191,194,202,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'list':([0,23,32,58,75,84,86,87,94,95,100,108,115,135,148,149,157,166,171,191,194,202,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'arith_op':([12,88,121,188,198,205,223,231,],[70,146,70,70,70,70,70,70,]),'logic_op':([14,90,107,127,150,151,190,221,],[75,148,75,75,75,75,75,75,]),'nullable':([18,48,49,78,79,80,153,],[81,111,113,128,130,132,81,]),'comp_op':([31,91,156,196,218,],[100,149,100,149,100,]),'parameters':([136,212,],[175,238,]),'parameter':([136,212,],[177,177,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement','sintactico.py',6),
  ('statement -> assignment','statement',1,'p_statement','sintactico.py',7),
  ('statement -> print','statement',1,'p_statement','sintactico.py',8),
  ('statement -> function','statement',1,'p_statement','sintactico.py',9),
  ('statement -> if_statement','statement',1,'p_statement','sintactico.py',10),
  ('statement -> while_statement','statement',1,'p_statement','sintactico.py',11),
  ('statement -> for_statement','statement',1,'p_statement','sintactico.py',12),
  ('statement -> lines','statement',1,'p_statement','sintactico.py',13),
  ('statement -> LBRACE lines RBRACE','statement',3,'p_statement','sintactico.py',14),
  ('statement -> reassignment','statement',1,'p_statement','sintactico.py',15),
  ('statement -> <empty>','statement',0,'p_statement','sintactico.py',16),
  ('assignment -> modifier type nullable IDENTIFIER ASSIGN expression SEMICOLON','assignment',7,'p_assignment','sintactico.py',19),
  ('assignment -> type nullable IDENTIFIER ASSIGN expression SEMICOLON','assignment',6,'p_assignment','sintactico.py',20),
  ('assignment -> modifier type IDENTIFIER ASSIGN expression SEMICOLON','assignment',6,'p_assignment','sintactico.py',21),
  ('assignment -> type IDENTIFIER ASSIGN expression SEMICOLON','assignment',5,'p_assignment','sintactico.py',22),
  ('assignment -> type IDENTIFIER ASSIGN expression','assignment',4,'p_assignment','sintactico.py',23),
  ('assignment -> int_assignment','assignment',1,'p_assignment','sintactico.py',24),
  ('assignment -> string_assignment','assignment',1,'p_assignment','sintactico.py',25),
  ('int_assignment -> modifier number_type nullable IDENTIFIER ASSIGN NULL SEMICOLON','int_assignment',7,'p_int_assignment','sintactico.py',30),
  ('int_assignment -> number_type nullable IDENTIFIER ASSIGN NULL SEMICOLON','int_assignment',6,'p_int_assignment','sintactico.py',31),
  ('int_assignment -> modifier number_type nullable IDENTIFIER ASSIGN arithmetic SEMICOLON','int_assignment',7,'p_int_assignment','sintactico.py',32),
  ('int_assignment -> number_type nullable IDENTIFIER ASSIGN arithmetic SEMICOLON','int_assignment',6,'p_int_assignment','sintactico.py',33),
  ('int_assignment -> modifier number_type IDENTIFIER ASSIGN arithmetic SEMICOLON','int_assignment',6,'p_int_assignment','sintactico.py',34),
  ('int_assignment -> number_type IDENTIFIER ASSIGN arithmetic SEMICOLON','int_assignment',5,'p_int_assignment','sintactico.py',35),
  ('int_assignment -> number_type IDENTIFIER ASSIGN arithmetic','int_assignment',4,'p_int_assignment','sintactico.py',36),
  ('string_assignment -> modifier string_type nullable IDENTIFIER ASSIGN NULL SEMICOLON','string_assignment',7,'p_string_assignment','sintactico.py',41),
  ('string_assignment -> string_type nullable IDENTIFIER ASSIGN NULL SEMICOLON','string_assignment',6,'p_string_assignment','sintactico.py',42),
  ('string_assignment -> modifier string_type nullable IDENTIFIER ASSIGN concate SEMICOLON','string_assignment',7,'p_string_assignment','sintactico.py',43),
  ('string_assignment -> string_type nullable IDENTIFIER ASSIGN concate SEMICOLON','string_assignment',6,'p_string_assignment','sintactico.py',44),
  ('string_assignment -> modifier string_type IDENTIFIER ASSIGN concate SEMICOLON','string_assignment',6,'p_string_assignment','sintactico.py',45),
  ('string_assignment -> string_type IDENTIFIER ASSIGN concate SEMICOLON','string_assignment',5,'p_string_assignment','sintactico.py',46),
  ('string_assignment -> string_type IDENTIFIER ASSIGN concate','string_assignment',4,'p_string_assignment','sintactico.py',47),
  ('number_type -> INTEGER_TYPE','number_type',1,'p_number_type','sintactico.py',51),
  ('number_type -> VAR','number_type',1,'p_number_type','sintactico.py',52),
  ('number_type -> DOUBLE_TYPE','number_type',1,'p_number_type','sintactico.py',53),
  ('string_type -> STRING_TYPE','string_type',1,'p_string_type','sintactico.py',57),
  ('string_type -> VAR','string_type',1,'p_string_type','sintactico.py',58),
  ('reassignment -> IDENTIFIER ASSIGN expression SEMICOLON','reassignment',4,'p_reassignment','sintactico.py',63),
  ('reassignment -> IDENTIFIER INLINE_ARITH number SEMICOLON','reassignment',4,'p_reassignment','sintactico.py',64),
  ('reassignment -> IDENTIFIER INLINE_ARITH SEMICOLON','reassignment',3,'p_reassignment','sintactico.py',65),
  ('reassignment -> IDENTIFIER INLINE_ARITH number','reassignment',3,'p_reassignment','sintactico.py',66),
  ('reassignment -> IDENTIFIER INLINE_ARITH','reassignment',2,'p_reassignment','sintactico.py',67),
  ('nullable -> QUESTION_MARK','nullable',1,'p_nullable','sintactico.py',71),
  ('modifier -> FINAL','modifier',1,'p_modifier','sintactico.py',75),
  ('modifier -> CONST','modifier',1,'p_modifier','sintactico.py',76),
  ('print -> PRINT LPAREN expression RPAREN SEMICOLON','print',5,'p_print','sintactico.py',80),
  ('print -> PRINT LPAREN RPAREN SEMICOLON','print',4,'p_print','sintactico.py',81),
  ('if_statement -> IF LPAREN logic RPAREN LBRACE lines RBRACE','if_statement',7,'p_if_statement','sintactico.py',86),
  ('if_statement -> if_statement ELSE if_statement','if_statement',3,'p_if_statement','sintactico.py',87),
  ('if_statement -> if_statement ELSE LBRACE lines RBRACE','if_statement',5,'p_if_statement','sintactico.py',88),
  ('function_call -> IDENTIFIER LPAREN values RPAREN SEMICOLON','function_call',5,'p_function_call','sintactico.py',94),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','sintactico.py',95),
  ('function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON','function_call',4,'p_function_call','sintactico.py',96),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','sintactico.py',97),
  ('type -> INTEGER_TYPE','type',1,'p_type','sintactico.py',101),
  ('type -> DOUBLE_TYPE','type',1,'p_type','sintactico.py',102),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','sintactico.py',103),
  ('type -> QUEUE_TYPE','type',1,'p_type','sintactico.py',104),
  ('type -> STRING_TYPE','type',1,'p_type','sintactico.py',105),
  ('type -> ENUM_TYPE','type',1,'p_type','sintactico.py',106),
  ('type -> VAR','type',1,'p_type','sintactico.py',107),
  ('type -> LIST_TYPE','type',1,'p_type','sintactico.py',108),
  ('type -> MAP_TYPE','type',1,'p_type','sintactico.py',109),
  ('type -> SET_TYPE','type',1,'p_type','sintactico.py',110),
  ('type -> DYNAMIC_TYPE','type',1,'p_type','sintactico.py',111),
  ('type -> VOID','type',1,'p_type','sintactico.py',112),
  ('expression -> arithmetic','expression',1,'p_expression','sintactico.py',117),
  ('expression -> concate','expression',1,'p_expression','sintactico.py',118),
  ('expression -> logic','expression',1,'p_expression','sintactico.py',119),
  ('expression -> function_call','expression',1,'p_expression','sintactico.py',120),
  ('expression -> division','expression',1,'p_expression','sintactico.py',121),
  ('arithmetic -> number','arithmetic',1,'p_arithmetic','sintactico.py',126),
  ('arithmetic -> arithmetic arith_op arithmetic','arithmetic',3,'p_arithmetic','sintactico.py',127),
  ('arithmetic -> LPAREN arithmetic arith_op arithmetic RPAREN','arithmetic',5,'p_arithmetic','sintactico.py',128),
  ('division -> number DIVIDE number','division',3,'p_division','sintactico.py',134),
  ('concate -> string','concate',1,'p_concate','sintactico.py',138),
  ('concate -> concate PLUS concate','concate',3,'p_concate','sintactico.py',139),
  ('concate -> LPAREN concate PLUS concate RPAREN','concate',5,'p_concate','sintactico.py',140),
  ('comparison -> values','comparison',1,'p_comparison','sintactico.py',144),
  ('comparison -> boolean','comparison',1,'p_comparison','sintactico.py',145),
  ('comparison -> comparison comp_op comparison','comparison',3,'p_comparison','sintactico.py',146),
  ('comparison -> LPAREN comparison comp_op number comparison','comparison',5,'p_comparison','sintactico.py',147),
  ('logic -> comparison','logic',1,'p_logic','sintactico.py',151),
  ('logic -> logic logic_op logic','logic',3,'p_logic','sintactico.py',152),
  ('logic -> LPAREN logic logic_op logic RPAREN','logic',5,'p_logic','sintactico.py',153),
  ('logic -> LOGICAL_NOT logic','logic',2,'p_logic','sintactico.py',154),
  ('logic_op -> LOGICAL_AND','logic_op',1,'p_logic_op','sintactico.py',158),
  ('logic_op -> LOGICAL_OR','logic_op',1,'p_logic_op','sintactico.py',159),
  ('arith_op -> PLUS','arith_op',1,'p_arith_op','sintactico.py',163),
  ('arith_op -> MINUS','arith_op',1,'p_arith_op','sintactico.py',164),
  ('arith_op -> TIMES','arith_op',1,'p_arith_op','sintactico.py',165),
  ('comp_op -> EQUAL','comp_op',1,'p_comp_op','sintactico.py',170),
  ('comp_op -> NOT_EQUAL','comp_op',1,'p_comp_op','sintactico.py',171),
  ('comp_op -> LESS','comp_op',1,'p_comp_op','sintactico.py',172),
  ('comp_op -> LESS_EQUAL','comp_op',1,'p_comp_op','sintactico.py',173),
  ('comp_op -> GREATER','comp_op',1,'p_comp_op','sintactico.py',174),
  ('comp_op -> GREATER_EQUAL','comp_op',1,'p_comp_op','sintactico.py',175),
  ('values -> value','values',1,'p_values','sintactico.py',180),
  ('values -> value COMMA values','values',3,'p_values','sintactico.py',181),
  ('value -> IDENTIFIER','value',1,'p_value','sintactico.py',185),
  ('value -> number','value',1,'p_value','sintactico.py',186),
  ('value -> string','value',1,'p_value','sintactico.py',187),
  ('value -> list','value',1,'p_value','sintactico.py',188),
  ('number -> INTEGER','number',1,'p_number','sintactico.py',192),
  ('number -> DOUBLE','number',1,'p_number','sintactico.py',193),
  ('string -> STRING','string',1,'p_string','sintactico.py',197),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',201),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',202),
  ('list -> LSQUARE RSQUARE','list',2,'p_list','sintactico.py',206),
  ('list -> LSQUARE values RSQUARE','list',3,'p_list','sintactico.py',207),
  ('function -> type IDENTIFIER LPAREN parameters RPAREN LBRACE lines RBRACE','function',8,'p_function','sintactico.py',213),
  ('lines -> line LINE_BREAK lines','lines',3,'p_lines','sintactico.py',217),
  ('lines -> line lines','lines',2,'p_lines','sintactico.py',218),
  ('lines -> line','lines',1,'p_lines','sintactico.py',219),
  ('lines -> LINE_BREAK','lines',1,'p_lines','sintactico.py',220),
  ('lines -> <empty>','lines',0,'p_lines','sintactico.py',221),
  ('line -> print','line',1,'p_line','sintactico.py',226),
  ('line -> assignment','line',1,'p_line','sintactico.py',227),
  ('line -> function','line',1,'p_line','sintactico.py',228),
  ('line -> if_statement','line',1,'p_line','sintactico.py',229),
  ('line -> while_statement','line',1,'p_line','sintactico.py',230),
  ('line -> for_statement','line',1,'p_line','sintactico.py',231),
  ('line -> function_call','line',1,'p_line','sintactico.py',232),
  ('line -> reassignment','line',1,'p_line','sintactico.py',233),
  ('parameters -> VOID','parameters',1,'p_parameters','sintactico.py',239),
  ('parameters -> parameter','parameters',1,'p_parameters','sintactico.py',240),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','sintactico.py',241),
  ('parameters -> <empty>','parameters',0,'p_parameters','sintactico.py',242),
  ('parameter -> type IDENTIFIER','parameter',2,'p_parameter','sintactico.py',247),
  ('parameter -> IDENTIFIER','parameter',1,'p_parameter','sintactico.py',248),
  ('map -> MAP_TYPE LESS type COMMA type GREATER','map',6,'p_map','sintactico.py',252),
  ('map -> MAP_TYPE LESS type COMMA type GREATER LSQUARE values RSQUARE','map',9,'p_map','sintactico.py',253),
  ('map -> MAP_TYPE LESS type COMMA type GREATER LSQUARE RSQUARE','map',8,'p_map','sintactico.py',254),
  ('set -> SET_TYPE LESS type GREATER','set',4,'p_set','sintactico.py',259),
  ('set -> SET_TYPE LESS type GREATER LSQUARE values RSQUARE','set',7,'p_set','sintactico.py',260),
  ('set -> SET_TYPE LESS type GREATER LSQUARE RSQUARE','set',6,'p_set','sintactico.py',261),
  ('queue -> QUEUE_TYPE LESS type GREATER','queue',4,'p_queue','sintactico.py',265),
  ('queue -> QUEUE_TYPE LESS type GREATER LSQUARE values RSQUARE','queue',7,'p_queue','sintactico.py',266),
  ('queue -> QUEUE_TYPE LESS type GREATER LSQUARE RSQUARE','queue',6,'p_queue','sintactico.py',267),
  ('while_statement -> WHILE LPAREN logic RPAREN LBRACE lines RBRACE','while_statement',7,'p_while_statement','sintactico.py',271),
  ('for_statement -> FOR LPAREN assignment SEMICOLON logic SEMICOLON reassignment RPAREN LBRACE lines RBRACE','for_statement',11,'p_for_statement','sintactico.py',277),
]
